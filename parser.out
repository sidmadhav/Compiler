Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    WS

Grammar

Rule 0     S' -> program
Rule 1     program -> file_input_star ENDMARKER
Rule 2     file_input_star -> NEWLINE
Rule 3     file_input_star -> stmt
Rule 4     file_input_star -> file_input_star stmt
Rule 5     suite -> simple_stmt
Rule 6     suite -> NEWLINE INDENT stmt_list DEDENT
Rule 7     stmt_list -> stmt stmt_list
Rule 8     stmt_list -> stmt
Rule 9     stmt -> simple_stmt
Rule 10    stmt -> compound_stmt
Rule 11    simple_stmt -> small_stmt NEWLINE
Rule 12    simple_stmt -> small_stmt_list NEWLINE
Rule 13    small_stmt_list -> small_stmt SEMI
Rule 14    small_stmt_list -> small_stmt small_stmt_list_list
Rule 15    small_stmt_list -> small_stmt small_stmt_list_list SEMI
Rule 16    small_stmt_list_list -> SEMI small_stmt
Rule 17    small_stmt_list_list -> small_stmt_list_list SEMI small_stmt
Rule 18    small_stmt -> expr_stmt
Rule 19    small_stmt -> print_stmt
Rule 20    small_stmt -> return_stmt
Rule 21    print_stmt -> PRINT
Rule 22    print_stmt -> PRINT test
Rule 23    print_stmt -> PRINT print_list
Rule 24    print_list -> test COMMA
Rule 25    print_list -> test print_list_list
Rule 26    print_list -> test print_list_list COMMA
Rule 27    print_list_list -> COMMA test
Rule 28    print_list_list -> print_list_list COMMA test
Rule 29    return_stmt -> RETURN
Rule 30    return_stmt -> RETURN testlist
Rule 31    expr_stmt -> testlist
Rule 32    expr_stmt -> testlist equal_list
Rule 33    equal_list -> EQUAL testlist
Rule 34    equal_list -> EQUAL testlist equal_list
Rule 35    testlist -> test
Rule 36    testlist -> test COMMA
Rule 37    testlist -> test testlist_list
Rule 38    testlist -> test testlist_list COMMA
Rule 39    testlist_list -> COMMA test
Rule 40    testlist_list -> testlist_list COMMA test
Rule 41    compound_stmt -> if_stmt
Rule 42    compound_stmt -> while_stmt
Rule 43    compound_stmt -> for_stmt
Rule 44    compound_stmt -> funcdef
Rule 45    if_stmt -> IF test COLON suite
Rule 46    if_stmt -> IF test COLON suite else_stmt
Rule 47    else_stmt -> ELSE COLON suite
Rule 48    while_stmt -> WHILE test COLON suite
Rule 49    for_stmt -> FOR NAME IN testlist COLON suite
Rule 50    funcdef -> DEF NAME parameters COLON suite
Rule 51    parameters -> LPAR RPAR
Rule 52    parameters -> LPAR varargslist RPAR
Rule 53    test -> or_test
Rule 54    or_test -> and_test
Rule 55    or_test -> and_test or_test_list
Rule 56    or_test_list -> OR and_test
Rule 57    or_test_list -> or_test_list OR and_test
Rule 58    and_test -> not_test
Rule 59    and_test -> not_test and_test_list
Rule 60    and_test_list -> AND not_test
Rule 61    and_test_list -> and_test_list AND not_test
Rule 62    not_test -> comparison
Rule 63    not_test -> NOT not_test
Rule 64    comparison -> arith_expr
Rule 65    comparison -> arith_expr comparison_list
Rule 66    comparison_list -> comp_op arith_expr
Rule 67    comparison_list -> comparison_list comp_op arith_expr
Rule 68    comp_op -> LESS
Rule 69    comp_op -> GREATER
Rule 70    comp_op -> EQEQUAL
Rule 71    comp_op -> GREATEREQUAL
Rule 72    comp_op -> LESSEQUAL
Rule 73    comp_op -> NOTEQUAL
Rule 74    arith_expr -> term
Rule 75    arith_expr -> term arith_expr_list
Rule 76    arith_expr_list -> arith_op
Rule 77    arith_expr_list -> arith_expr_list arith_op
Rule 78    arith_op -> PLUS term
Rule 79    arith_op -> MINUS term
Rule 80    term -> power
Rule 81    term -> power term_list
Rule 82    term_list -> term_op
Rule 83    term_list -> term_list term_op
Rule 84    term_op -> STAR power
Rule 85    term_op -> SLASH power
Rule 86    power -> atom
Rule 87    power -> atom power_list
Rule 88    power_list -> trailer
Rule 89    power_list -> power_list trailer
Rule 90    atom -> LPAR RPAR
Rule 91    atom -> LPAR testlist_comp RPAR
Rule 92    atom -> LSQB RSQB
Rule 93    atom -> LSQB listmaker RSQB
Rule 94    atom -> LBRACE RBRACE
Rule 95    atom -> LBRACE dictorsetmaker RBRACE
Rule 96    atom -> NAME
Rule 97    atom -> NUMBER
Rule 98    atom -> atom_string_list
Rule 99    atom_string_list -> STRING
Rule 100   atom_string_list -> atom_string_list STRING
Rule 101   listmaker -> test
Rule 102   listmaker -> test COMMA
Rule 103   listmaker -> test listmaker_list
Rule 104   listmaker -> test listmaker_list COMMA
Rule 105   listmaker_list -> COMMA test
Rule 106   listmaker_list -> listmaker_list COMMA test
Rule 107   testlist_comp -> test
Rule 108   testlist_comp -> test COMMA
Rule 109   testlist_comp -> test testlist_comp_list
Rule 110   testlist_comp -> test testlist_comp_list COMMA
Rule 111   testlist_comp_list -> COMMA test
Rule 112   testlist_comp_list -> testlist_comp_list COMMA test
Rule 113   trailer -> LPAR RPAR
Rule 114   trailer -> LPAR arglist RPAR
Rule 115   trailer -> LSQB subscriptlist RSQB
Rule 116   subscriptlist -> subscript
Rule 117   subscriptlist -> subscript COMMA
Rule 118   subscriptlist -> subscript subscriptlist_list
Rule 119   subscriptlist -> subscript subscriptlist_list COMMA
Rule 120   subscriptlist_list -> COMMA subscript
Rule 121   subscriptlist_list -> subscriptlist_list COMMA subscript
Rule 122   subscript -> test
Rule 123   dictorsetmaker -> test COLON test
Rule 124   dictorsetmaker -> test COLON test COMMA
Rule 125   dictorsetmaker -> test COLON test dosm_colon_list
Rule 126   dictorsetmaker -> test COLON test dosm_colon_list COMMA
Rule 127   dosm_colon_list -> COMMA test COLON test
Rule 128   dosm_colon_list -> dosm_colon_list COMMA test COLON test
Rule 129   arglist -> argument
Rule 130   arglist -> argument COMMA
Rule 131   arglist -> arglist_list argument
Rule 132   arglist -> arglist_list argument COMMA
Rule 133   arglist_list -> argument COMMA
Rule 134   arglist_list -> arglist_list argument COMMA
Rule 135   argument -> test
Rule 136   argument -> test EQUAL test
Rule 137   varargslist -> fpdef
Rule 138   varargslist -> fpdef COMMA
Rule 139   varargslist -> fpdef varargslist_list
Rule 140   varargslist -> fpdef varargslist_list COMMA
Rule 141   varargslist -> fpdef EQUAL test
Rule 142   varargslist -> fpdef EQUAL test COMMA
Rule 143   varargslist -> fpdef EQUAL test varargslist_list
Rule 144   varargslist -> fpdef EQUAL test varargslist_list COMMA
Rule 145   varargslist_list -> COMMA fpdef
Rule 146   varargslist_list -> COMMA fpdef EQUAL test
Rule 147   varargslist_list -> varargslist_list COMMA fpdef
Rule 148   varargslist_list -> varargslist_list COMMA fpdef EQUAL test
Rule 149   fpdef -> NAME
Rule 150   fpdef -> LPAR fplist RPAR
Rule 151   fplist -> fpdef
Rule 152   fplist -> fpdef COMMA
Rule 153   fplist -> fpdef fplist_list
Rule 154   fplist -> fpdef fplist_list COMMA
Rule 155   fplist_list -> COMMA fpdef
Rule 156   fplist_list -> fplist_list COMMA fpdef

Terminals, with rules where they appear

AND                  : 60 61
COLON                : 45 46 47 48 49 50 123 124 125 126 127 128
COMMA                : 24 26 27 28 36 38 39 40 102 104 105 106 108 110 111 112 117 119 120 121 124 126 127 128 130 132 133 134 138 140 142 144 145 146 147 148 152 154 155 156
DEDENT               : 6
DEF                  : 50
ELSE                 : 47
ENDMARKER            : 1
EQEQUAL              : 70
EQUAL                : 33 34 136 141 142 143 144 146 148
FOR                  : 49
GREATER              : 69
GREATEREQUAL         : 71
IF                   : 45 46
IN                   : 49
INDENT               : 6
LBRACE               : 94 95
LESS                 : 68
LESSEQUAL            : 72
LPAR                 : 51 52 90 91 113 114 150
LSQB                 : 92 93 115
MINUS                : 79
NAME                 : 49 50 96 149
NEWLINE              : 2 6 11 12
NOT                  : 63
NOTEQUAL             : 73
NUMBER               : 97
OR                   : 56 57
PLUS                 : 78
PRINT                : 21 22 23
RBRACE               : 94 95
RETURN               : 29 30
RPAR                 : 51 52 90 91 113 114 150
RSQB                 : 92 93 115
SEMI                 : 13 15 16 17
SLASH                : 85
STAR                 : 84
STRING               : 99 100
WHILE                : 48
WS                   : 
error                : 

Nonterminals, with rules where they appear

and_test             : 54 55 56 57
and_test_list        : 59 61
arglist              : 114
arglist_list         : 131 132 134
argument             : 129 130 131 132 133 134
arith_expr           : 64 65 66 67
arith_expr_list      : 75 77
arith_op             : 76 77
atom                 : 86 87
atom_string_list     : 98 100
comp_op              : 66 67
comparison           : 62
comparison_list      : 65 67
compound_stmt        : 10
dictorsetmaker       : 95
dosm_colon_list      : 125 126 128
else_stmt            : 46
equal_list           : 32 34
expr_stmt            : 18
file_input_star      : 1 4
for_stmt             : 43
fpdef                : 137 138 139 140 141 142 143 144 145 146 147 148 151 152 153 154 155 156
fplist               : 150
fplist_list          : 153 154 156
funcdef              : 44
if_stmt              : 41
listmaker            : 93
listmaker_list       : 103 104 106
not_test             : 58 59 60 61 63
or_test              : 53
or_test_list         : 55 57
parameters           : 50
power                : 80 81 84 85
power_list           : 87 89
print_list           : 23
print_list_list      : 25 26 28
print_stmt           : 19
program              : 0
return_stmt          : 20
simple_stmt          : 5 9
small_stmt           : 11 13 14 15 16 17
small_stmt_list      : 12
small_stmt_list_list : 14 15 17
stmt                 : 3 4 7 8
stmt_list            : 6 7
subscript            : 116 117 118 119 120 121
subscriptlist        : 115
subscriptlist_list   : 118 119 121
suite                : 45 46 47 48 49 50
term                 : 74 75 78 79
term_list            : 81 83
term_op              : 82 83
test                 : 22 24 25 26 27 28 35 36 37 38 39 40 45 46 48 101 102 103 104 105 106 107 108 109 110 111 112 122 123 123 124 124 125 125 126 126 127 127 128 128 135 136 136 141 142 143 144 146 148
testlist             : 30 31 32 33 34 49
testlist_comp        : 91
testlist_comp_list   : 109 110 112
testlist_list        : 37 38 40
trailer              : 88 89
varargslist          : 52
varargslist_list     : 139 140 143 144 147 148
while_stmt           : 42

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . file_input_star ENDMARKER
    (2) file_input_star -> . NEWLINE
    (3) file_input_star -> . stmt
    (4) file_input_star -> . file_input_star stmt
    (9) stmt -> . simple_stmt
    (10) stmt -> . compound_stmt
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (41) compound_stmt -> . if_stmt
    (42) compound_stmt -> . while_stmt
    (43) compound_stmt -> . for_stmt
    (44) compound_stmt -> . funcdef
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (45) if_stmt -> . IF test COLON suite
    (46) if_stmt -> . IF test COLON suite else_stmt
    (48) while_stmt -> . WHILE test COLON suite
    (49) for_stmt -> . FOR NAME IN testlist COLON suite
    (50) funcdef -> . DEF NAME parameters COLON suite
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         shift and go to state 16
    IF              shift and go to state 32
    WHILE           shift and go to state 8
    FOR             shift and go to state 22
    DEF             shift and go to state 13
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    file_input_star                shift and go to state 14
    simple_stmt                    shift and go to state 17
    program                        shift and go to state 18
    test                           shift and go to state 19
    compound_stmt                  shift and go to state 21
    power                          shift and go to state 15
    print_stmt                     shift and go to state 23
    testlist                       shift and go to state 24
    stmt                           shift and go to state 25
    for_stmt                       shift and go to state 27
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    funcdef                        shift and go to state 29
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    if_stmt                        shift and go to state 36
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38
    while_stmt                     shift and go to state 39

state 1

    (90) atom -> LPAR . RPAR
    (91) atom -> LPAR . testlist_comp RPAR
    (107) testlist_comp -> . test
    (108) testlist_comp -> . test COMMA
    (109) testlist_comp -> . test testlist_comp_list
    (110) testlist_comp -> . test testlist_comp_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RPAR            shift and go to state 40
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    atom                           shift and go to state 4
    not_test                       shift and go to state 10
    testlist_comp                  shift and go to state 41
    test                           shift and go to state 42

state 2

    (96) atom -> NAME .

    LPAR            reduce using rule 96 (atom -> NAME .)
    LSQB            reduce using rule 96 (atom -> NAME .)
    STAR            reduce using rule 96 (atom -> NAME .)
    SLASH           reduce using rule 96 (atom -> NAME .)
    PLUS            reduce using rule 96 (atom -> NAME .)
    MINUS           reduce using rule 96 (atom -> NAME .)
    LESS            reduce using rule 96 (atom -> NAME .)
    GREATER         reduce using rule 96 (atom -> NAME .)
    EQEQUAL         reduce using rule 96 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 96 (atom -> NAME .)
    LESSEQUAL       reduce using rule 96 (atom -> NAME .)
    NOTEQUAL        reduce using rule 96 (atom -> NAME .)
    AND             reduce using rule 96 (atom -> NAME .)
    OR              reduce using rule 96 (atom -> NAME .)
    COMMA           reduce using rule 96 (atom -> NAME .)
    EQUAL           reduce using rule 96 (atom -> NAME .)
    NEWLINE         reduce using rule 96 (atom -> NAME .)
    SEMI            reduce using rule 96 (atom -> NAME .)
    RPAR            reduce using rule 96 (atom -> NAME .)
    COLON           reduce using rule 96 (atom -> NAME .)
    RSQB            reduce using rule 96 (atom -> NAME .)
    RBRACE          reduce using rule 96 (atom -> NAME .)


state 3

    (11) simple_stmt -> small_stmt . NEWLINE
    (13) small_stmt_list -> small_stmt . SEMI
    (14) small_stmt_list -> small_stmt . small_stmt_list_list
    (15) small_stmt_list -> small_stmt . small_stmt_list_list SEMI
    (16) small_stmt_list_list -> . SEMI small_stmt
    (17) small_stmt_list_list -> . small_stmt_list_list SEMI small_stmt

    NEWLINE         shift and go to state 44
    SEMI            shift and go to state 45

    small_stmt_list_list           shift and go to state 43

state 4

    (86) power -> atom .
    (87) power -> atom . power_list
    (88) power_list -> . trailer
    (89) power_list -> . power_list trailer
    (113) trailer -> . LPAR RPAR
    (114) trailer -> . LPAR arglist RPAR
    (115) trailer -> . LSQB subscriptlist RSQB

    STAR            reduce using rule 86 (power -> atom .)
    SLASH           reduce using rule 86 (power -> atom .)
    PLUS            reduce using rule 86 (power -> atom .)
    MINUS           reduce using rule 86 (power -> atom .)
    LESS            reduce using rule 86 (power
     -> atom .)
    GREATER         reduce using rule 86 (power -> atom .)
    EQEQUAL         reduce using rule 86 (power -> atom .)
    GREATEREQUAL    reduce using rule 86 (power -> atom .)
    LESSEQUAL       reduce using rule 86 (power -> atom .)
    NOTEQUAL        reduce using rule 86 (power -> atom .)
    AND             reduce using rule 86 (power -> atom .)
    OR              reduce using rule 86 (power -> atom .)
    COMMA           reduce using rule 86 (power -> atom .)
    EQUAL           reduce using rule 86 (power -> atom .)
    NEWLINE         reduce using rule 86 (power -> atom .)
    SEMI            reduce using rule 86 (power -> atom .)
    RSQB            reduce using rule 86 (power -> atom .)
    RPAR            reduce using rule 86 (power -> atom .)
    COLON           reduce using rule 86 (power -> atom .)
    RBRACE          reduce using rule 86 (power -> atom .)
    LPAR            shift and go to state 46
    LSQB            shift and go to state 48

    power_list                     shift and go to state 47
    trailer                        shift and go to state 49

state 5

    (98) atom -> atom_string_list .
    (100) atom_string_list -> atom_string_list . STRING

    LPAR            reduce using rule 98 (atom -> atom_string_list .)
    LSQB            reduce using rule 98 (atom -> atom_string_list .)
    STAR            reduce using rule 98 (atom -> atom_string_list .)
    SLASH           reduce using rule 98 (atom -> atom_string_list .)
    PLUS            reduce using rule 98 (atom -> atom_string_list .)
    MINUS           reduce using rule 98 (atom -> atom_string_list .)
    LESS            reduce using rule 98 (atom -> atom_string_list .)
    GREATER         reduce using rule 98 (atom -> atom_string_list .)
    EQEQUAL         reduce using rule 98 (atom -> atom_string_list .)
    GREATEREQUAL    reduce using rule 98 (atom -> atom_string_list .)
    LESSEQUAL       reduce using rule 98 (atom -> atom_string_list .)
    NOTEQUAL        reduce using rule 98 (atom -> atom_string_list .)
    AND             reduce using rule 98 (atom -> atom_string_list .)
    OR              reduce using rule 98 (atom -> atom_string_list .)
    COMMA           reduce using rule 98 (atom -> atom_string_list .)
    EQUAL           reduce using rule 98 (atom -> atom_string_list .)
    NEWLINE         reduce using rule 98 (atom -> atom_string_list .)
    SEMI            reduce using rule 98 (atom -> atom_string_list .)
    RPAR            reduce using rule 98 (atom -> atom_string_list .)
    COLON           reduce using rule 98 (atom -> atom_string_list .)
    RSQB            reduce using rule 98 (atom -> atom_string_list .)
    RBRACE          reduce using rule 98 (atom -> atom_string_list .)
    STRING          shift and go to state 50


state 6

    (97) atom -> NUMBER .

    LPAR            reduce using rule 97 (atom -> NUMBER .)
    LSQB            reduce using rule 97 (atom -> NUMBER .)
    STAR            reduce using rule 97 (atom -> NUMBER .)
    SLASH           reduce using rule 97 (atom -> NUMBER .)
    PLUS            reduce using rule 97 (atom -> NUMBER .)
    MINUS           reduce using rule 97 (atom -> NUMBER .)
    LESS            reduce using rule 97 (atom -> NUMBER .)
    GREATER         reduce using rule 97 (atom -> NUMBER .)
    EQEQUAL         reduce using rule 97 (atom -> NUMBER .)
    GREATEREQUAL    reduce using rule 97 (atom -> NUMBER .)
    LESSEQUAL       reduce using rule 97 (atom -> NUMBER .)
    NOTEQUAL        reduce using rule 97 (atom -> NUMBER .)
    AND             reduce using rule 97 (atom -> NUMBER .)
    OR              reduce using rule 97 (atom -> NUMBER .)
    COMMA           reduce using rule 97 (atom -> NUMBER .)
    EQUAL           reduce using rule 97 (atom -> NUMBER .)
    NEWLINE         reduce using rule 97 (atom -> NUMBER .)
    SEMI            reduce using rule 97 (atom -> NUMBER .)
    RPAR            reduce using rule 97 (atom -> NUMBER .)
    COLON           reduce using rule 97 (atom -> NUMBER .)
    RSQB            reduce using rule 97 (atom -> NUMBER .)
    RBRACE          reduce using rule 97 (atom -> NUMBER .)


state 7

    (12) simple_stmt -> small_stmt_list . NEWLINE

    NEWLINE         shift and go to state 51


state 8

    (48) while_stmt -> WHILE . test COLON suite
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 52

state 9

    (20) small_stmt -> return_stmt .

    NEWLINE         reduce using rule 20 (small_stmt -> return_stmt .)
    SEMI            reduce using rule 20 (small_stmt -> return_stmt .)


state 10

    (58) and_test -> not_test .
    (59) and_test -> not_test . and_test_list
    (60) and_test_list -> . AND not_test
    (61) and_test_list -> . and_test_list AND not_test

    OR              reduce using rule 58 (and_test -> not_test .)
    COMMA           reduce using rule 58 (and_test -> not_test .)
    RSQB            reduce using rule 58 (and_test -> not_test .)
    RPAR            reduce using rule 58 (and_test -> not_test .)
    EQUAL           reduce using rule 58 (and_test -> not_test .)
    NEWLINE         reduce using rule 58 (and_test -> not_test .)
    SEMI            reduce using rule 58 (and_test -> not_test .)
    COLON           reduce using rule 58 (and_test -> not_test .)
    RBRACE          reduce using rule 58 (and_test -> not_test .)
    AND             shift and go to state 54

    and_test_list                  shift and go to state 53

state 11

    (21) print_stmt -> PRINT .
    (22) print_stmt -> PRINT . test
    (23) print_stmt -> PRINT . print_list
    (53) test -> . or_test
    (24) print_list -> . test COMMA
    (25) print_list -> . test print_list_list
    (26) print_list -> . test print_list_list COMMA
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         reduce using rule 21 (print_stmt -> PRINT .)
    SEMI            reduce using rule 21 (print_stmt -> PRINT .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 56
    print_list                     shift and go to state 55

state 12

    (29) return_stmt -> RETURN .
    (30) return_stmt -> RETURN . testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    SEMI            reduce using rule 29 (return_stmt -> RETURN .)
    NEWLINE         reduce using rule 29 (return_stmt -> RETURN .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    testlist                       shift and go to state 57
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 19

state 13

    (50) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 58


state 14

    (1) program -> file_input_star . ENDMARKER
    (4) file_input_star -> file_input_star . stmt
    (9) stmt -> . simple_stmt
    (10) stmt -> . compound_stmt
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (41) compound_stmt -> . if_stmt
    (42) compound_stmt -> . while_stmt
    (43) compound_stmt -> . for_stmt
    (44) compound_stmt -> . funcdef
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (45) if_stmt -> . IF test COLON suite
    (46) if_stmt -> . IF test COLON suite else_stmt
    (48) while_stmt -> . WHILE test COLON suite
    (49) for_stmt -> . FOR NAME IN testlist COLON suite
    (50) funcdef -> . DEF NAME parameters COLON suite
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    ENDMARKER       shift and go to state 59
    IF              shift and go to state 32
    WHILE           shift and go to state 8
    FOR             shift and go to state 22
    DEF             shift and go to state 13
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    simple_stmt                    shift and go to state 17
    test                           shift and go to state 19
    compound_stmt                  shift and go to state 21
    power                          shift and go to state 15
    print_stmt                     shift and go to state 23
    testlist                       shift and go to state 24
    stmt                           shift and go to state 60
    for_stmt                       shift and go to state 27
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    funcdef                        shift and go to state 29
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    if_stmt                        shift and go to state 36
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38
    while_stmt                     shift and go to state 39

state 15

    (80) term -> power .
    (81) term -> power . term_list
    (82) term_list -> . term_op
    (83) term_list -> . term_list term_op
    (84) term_op -> . STAR power
    (85) term_op -> . SLASH power

    PLUS            reduce using rule 80 (term -> power .)
    MINUS           reduce using rule 80 (term -> power .)
    LESS            reduce using rule 80 (term -> power .)
    GREATER         reduce using rule 80 (term -> power .)
    EQEQUAL         reduce using rule 80 (term -> power .)
    GREATEREQUAL    reduce using rule 80 (term -> power .)
    LESSEQUAL       reduce using rule 80 (term -> power .)
    NOTEQUAL        reduce using rule 80 (term -> power .)
    AND             reduce using rule 80 (term -> power .)
    OR              reduce using rule 80 (term -> power .)
    COMMA           reduce using rule 80 (term -> power .)
    EQUAL           reduce using rule 80 (term -> power .)
    NEWLINE         reduce using rule 80 (term -> power .)
    SEMI            reduce using rule 80 (term -> power .)
    RPAR            reduce using rule 80 (term -> power .)
    COLON           reduce using rule 80 (term -> power .)
    RSQB            reduce using rule 80 (term -> power .)
    RBRACE          reduce using rule 80 (term -> power .)
    STAR            shift and go to state 61
    SLASH           shift and go to state 63

    term_list                      shift and go to state 62
    term_op                        shift and go to state 64

state 16

    (2) file_input_star -> NEWLINE .

    ENDMARKER       reduce using rule 2 (file_input_star -> NEWLINE .)
    IF              reduce using rule 2 (file_input_star -> NEWLINE .)
    WHILE           reduce using rule 2 (file_input_star -> NEWLINE .)
    FOR             reduce using rule 2 (file_input_star -> NEWLINE .)
    DEF             reduce using rule 2 (file_input_star -> NEWLINE .)
    PRINT           reduce using rule 2 (file_input_star -> NEWLINE .)
    RETURN          reduce using rule 2 (file_input_star -> NEWLINE .)
    NOT             reduce using rule 2 (file_input_star -> NEWLINE .)
    LPAR            reduce using rule 2 (file_input_star -> NEWLINE .)
    LSQB            reduce using rule 2 (file_input_star -> NEWLINE .)
    LBRACE          reduce using rule 2 (file_input_star -> NEWLINE .)
    NAME            reduce using rule 2 (file_input_star -> NEWLINE .)
    NUMBER          reduce using rule 2 (file_input_star -> NEWLINE .)
    STRING          reduce using rule 2 (file_input_star -> NEWLINE .)


state 17

    (9) stmt -> simple_stmt .

    ENDMARKER       reduce using rule 9 (stmt -> simple_stmt .)
    IF              reduce using rule 9 (stmt -> simple_stmt .)
    WHILE           reduce using rule 9 (stmt -> simple_stmt .)
    FOR             reduce using rule 9 (stmt -> simple_stmt .)
    DEF             reduce using rule 9 (stmt -> simple_stmt .)
    PRINT           reduce using rule 9 (stmt -> simple_stmt .)
    RETURN          reduce using rule 9 (stmt -> simple_stmt .)
    NOT             reduce using rule 9 (stmt -> simple_stmt .)
    LPAR            reduce using rule 9 (stmt -> simple_stmt .)
    LSQB            reduce using rule 9 (stmt -> simple_stmt .)
    LBRACE          reduce using rule 9 (stmt -> simple_stmt .)
    NAME            reduce using rule 9 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 9 (stmt -> simple_stmt .)
    STRING          reduce using rule 9 (stmt -> simple_stmt .)
    DEDENT          reduce using rule 9 (stmt -> simple_stmt .)


state 18

    (0) S' -> program .



state 19

    (35) testlist -> test .
    (36) testlist -> test . COMMA
    (37) testlist -> test . testlist_list
    (38) testlist -> test . testlist_list COMMA
    (39) testlist_list -> . COMMA test
    (40) testlist_list -> . testlist_list COMMA test

    EQUAL           reduce using rule 35 (testlist -> test .)
    NEWLINE         reduce using rule 35 (testlist -> test .)
    SEMI            reduce using rule 35 (testlist -> test .)
    COLON           reduce using rule 35 (testlist -> test .)
    COMMA           shift and go to state 66

    testlist_list                  shift and go to state 65

state 20

    (99) atom_string_list -> STRING .

    STRING          reduce using rule 99 (atom_string_list -> STRING .)
    LPAR            reduce using rule 99 (atom_string_list -> STRING .)
    LSQB            reduce using rule 99 (atom_string_list -> STRING .)
    STAR            reduce using rule 99 (atom_string_list -> STRING .)
    SLASH           reduce using rule 99 (atom_string_list -> STRING .)
    PLUS            reduce using rule 99 (atom_string_list -> STRING .)
    MINUS           reduce using rule 99 (atom_string_list -> STRING .)
    LESS            reduce using rule 99 (atom_string_list -> STRING .)
    GREATER         reduce using rule 99 (atom_string_list -> STRING .)
    EQEQUAL         reduce using rule 99 (atom_string_list -> STRING .)
    GREATEREQUAL    reduce using rule 99 (atom_string_list -> STRING .)
    LESSEQUAL       reduce using rule 99 (atom_string_list -> STRING .)
    NOTEQUAL        reduce using rule 99 (atom_string_list -> STRING .)
    AND             reduce using rule 99 (atom_string_list -> STRING .)
    OR              reduce using rule 99 (atom_string_list -> STRING .)
    COMMA           reduce using rule 99 (atom_string_list -> STRING .)
    EQUAL           reduce using rule 99 (atom_string_list -> STRING .)
    NEWLINE         reduce using rule 99 (atom_string_list -> STRING .)
    SEMI            reduce using rule 99 (atom_string_list -> STRING .)
    COLON           reduce using rule 99 (atom_string_list -> STRING .)
    RSQB            reduce using rule 99 (atom_string_list -> STRING .)
    RPAR            reduce using rule 99 (atom_string_list -> STRING .)
    RBRACE          reduce using rule 99 (atom_string_list -> STRING .)


state 21

    (10) stmt -> compound_stmt .

    ENDMARKER       reduce using rule 10 (stmt -> compound_stmt .)
    IF              reduce using rule 10 (stmt -> compound_stmt .)
    WHILE           reduce using rule 10 (stmt -> compound_stmt .)
    FOR             reduce using rule 10 (stmt -> compound_stmt .)
    DEF             reduce using rule 10 (stmt -> compound_stmt .)
    PRINT           reduce using rule 10 (stmt -> compound_stmt .)
    RETURN          reduce using rule 10 (stmt -> compound_stmt .)
    NOT             reduce using rule 10 (stmt -> compound_stmt .)
    LPAR            reduce using rule 10 (stmt -> compound_stmt .)
    LSQB            reduce using rule 10 (stmt -> compound_stmt .)
    LBRACE          reduce using rule 10 (stmt -> compound_stmt .)
    NAME            reduce using rule 10 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 10 (stmt -> compound_stmt .)
    STRING          reduce using rule 10 (stmt -> compound_stmt .)
    DEDENT          reduce using rule 10 (stmt -> compound_stmt .)


state 22

    (49) for_stmt -> FOR . NAME IN testlist COLON suite

    NAME            shift and go to state 67


state 23

    (19) small_stmt -> print_stmt .

    NEWLINE         reduce using rule 19 (small_stmt -> print_stmt .)
    SEMI            reduce using rule 19 (small_stmt -> print_stmt .)


state 24

    (31) expr_stmt -> testlist .
    (32) expr_stmt -> testlist . equal_list
    (33) equal_list -> . EQUAL testlist
    (34) equal_list -> . EQUAL testlist equal_list

    SEMI            reduce using rule 31 (expr_stmt -> testlist .)
    NEWLINE         reduce using rule 31 (expr_stmt -> testlist .)
    EQUAL           shift and go to state 69

    equal_list                     shift and go to state 68

state 25

    (3) file_input_star -> stmt .

    ENDMARKER       reduce using rule 3 (file_input_star -> stmt .)
    IF              reduce using rule 3 (file_input_star -> stmt .)
    WHILE           reduce using rule 3 (file_input_star -> stmt .)
    FOR             reduce using rule 3 (file_input_star -> stmt .)
    DEF             reduce using rule 3 (file_input_star -> stmt .)
    PRINT           reduce using rule 3 (file_input_star -> stmt .)
    RETURN          reduce using rule 3 (file_input_star -> stmt .)
    NOT             reduce using rule 3 (file_input_star -> stmt .)
    LPAR            reduce using rule 3 (file_input_star -> stmt .)
    LSQB            reduce using rule 3 (file_input_star -> stmt .)
    LBRACE          reduce using rule 3 (file_input_star -> stmt .)
    NAME            reduce using rule 3 (file_input_star -> stmt .)
    NUMBER          reduce using rule 3 (file_input_star -> stmt .)
    STRING          reduce using rule 3 (file_input_star -> stmt .)


state 26

    (63) not_test -> NOT . not_test
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    power                          shift and go to state 15
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    not_test                       shift and go to state 70
    atom                           shift and go to state 4

state 27

    (43) compound_stmt -> for_stmt .

    ENDMARKER       reduce using rule 43 (compound_stmt -> for_stmt .)
    IF              reduce using rule 43 (compound_stmt -> for_stmt .)
    WHILE           reduce using rule 43 (compound_stmt -> for_stmt .)
    FOR             reduce using rule 43 (compound_stmt -> for_stmt .)
    DEF             reduce using rule 43 (compound_stmt -> for_stmt .)
    PRINT           reduce using rule 43 (compound_stmt -> for_stmt .)
    RETURN          reduce using rule 43 (compound_stmt -> for_stmt .)
    NOT             reduce using rule 43 (compound_stmt -> for_stmt .)
    LPAR            reduce using rule 43 (compound_stmt -> for_stmt .)
    LSQB            reduce using rule 43 (compound_stmt -> for_stmt .)
    LBRACE          reduce using rule 43 (compound_stmt -> for_stmt .)
    NAME            reduce using rule 43 (compound_stmt -> for_stmt .)
    NUMBER          reduce using rule 43 (compound_stmt -> for_stmt .)
    STRING          reduce using rule 43 (compound_stmt -> for_stmt .)
    DEDENT          reduce using rule 43 (compound_stmt -> for_stmt .)


state 28

    (54) or_test -> and_test .
    (55) or_test -> and_test . or_test_list
    (56) or_test_list -> . OR and_test
    (57) or_test_list -> . or_test_list OR and_test

    COMMA           reduce using rule 54 (or_test -> and_test .)
    EQUAL           reduce using rule 54 (or_test -> and_test .)
    NEWLINE         reduce using rule 54 (or_test -> and_test .)
    SEMI            reduce using rule 54 (or_test -> and_test .)
    COLON           reduce using rule 54 (or_test -> and_test .)
    RSQB            reduce using rule 54 (or_test -> and_test .)
    RBRACE          reduce using rule 54 (or_test -> and_test .)
    RPAR            reduce using rule 54 (or_test -> and_test .)
    OR              shift and go to state 72

    or_test_list                   shift and go to state 71

state 29

    (44) compound_stmt -> funcdef .

    ENDMARKER       reduce using rule 44 (compound_stmt -> funcdef .)
    IF              reduce using rule 44 (compound_stmt -> funcdef .)
    WHILE           reduce using rule 44 (compound_stmt -> funcdef .)
    FOR             reduce using rule 44 (compound_stmt -> funcdef .)
    DEF             reduce using rule 44 (compound_stmt -> funcdef .)
    PRINT           reduce using rule 44 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 44 (compound_stmt -> funcdef .)
    NOT             reduce using rule 44 (compound_stmt -> funcdef .)
    LPAR            reduce using rule 44 (compound_stmt -> funcdef .)
    LSQB            reduce using rule 44 (compound_stmt -> funcdef .)
    LBRACE          reduce using rule 44 (compound_stmt -> funcdef .)
    NAME            reduce using rule 44 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 44 (compound_stmt -> funcdef .)
    STRING          reduce using rule 44 (compound_stmt -> funcdef .)
    DEDENT          reduce using rule 44 (compound_stmt -> funcdef .)


state 30

    (92) atom -> LSQB . RSQB
    (93) atom -> LSQB . listmaker RSQB
    (101) listmaker -> . test
    (102) listmaker -> . test COMMA
    (103) listmaker -> . test listmaker_list
    (104) listmaker -> . test listmaker_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RSQB            shift and go to state 75
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 74
    listmaker                      shift and go to state 73

state 31

    (18) small_stmt -> expr_stmt .

    NEWLINE         reduce using rule 18 (small_stmt -> expr_stmt .)
    SEMI            reduce using rule 18 (small_stmt -> expr_stmt .)


state 32

    (45) if_stmt -> IF . test COLON suite
    (46) if_stmt -> IF . test COLON suite else_stmt
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 76

state 33

    (62) not_test -> comparison .

    AND             reduce using rule 62 (not_test -> comparison .)
    OR              reduce using rule 62 (not_test -> comparison .)
    COMMA           reduce using rule 62 (not_test -> comparison .)
    RSQB            reduce using rule 62 (not_test -> comparison .)
    EQUAL           reduce using rule 62 (not_test -> comparison .)
    NEWLINE         reduce using rule 62 (not_test -> comparison .)
    SEMI            reduce using rule 62 (not_test -> comparison .)
    RPAR            reduce using rule 62 (not_test -> comparison .)
    COLON           reduce using rule 62 (not_test -> comparison .)
    RBRACE          reduce using rule 62 (not_test -> comparison .)


state 34

    (74) arith_expr -> term .
    (75) arith_expr -> term . arith_expr_list
    (76) arith_expr_list -> . arith_op
    (77) arith_expr_list -> . arith_expr_list arith_op
    (78) arith_op -> . PLUS term
    (79) arith_op -> . MINUS term

    LESS            reduce using rule 74 (arith_expr -> term .)
    GREATER         reduce using rule 74 (arith_expr -> term .)
    EQEQUAL         reduce using rule 74 (arith_expr -> term .)
    GREATEREQUAL    reduce using rule 74 (arith_expr -> term .)
    LESSEQUAL       reduce using rule 74 (arith_expr -> term .)
    NOTEQUAL        reduce using rule 74 (arith_expr -> term .)
    AND             reduce using rule 74 (arith_expr -> term .)
    OR              reduce using rule 74 (arith_expr -> term .)
    COLON           reduce using rule 74 (arith_expr -> term .)
    COMMA           reduce using rule 74 (arith_expr -> term .)
    EQUAL           reduce using rule 74 (arith_expr -> term .)
    NEWLINE         reduce using rule 74 (arith_expr -> term .)
    SEMI            reduce using rule 74 (arith_expr -> term .)
    RSQB            reduce using rule 74 (arith_expr -> term .)
    RPAR            reduce using rule 74 (arith_expr -> term .)
    RBRACE          reduce using rule 74 (arith_expr -> term .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80

    arith_expr_list                shift and go to state 77
    arith_op                       shift and go to state 78

state 35

    (94) atom -> LBRACE . RBRACE
    (95) atom -> LBRACE . dictorsetmaker RBRACE
    (123) dictorsetmaker -> . test COLON test
    (124) dictorsetmaker -> . test COLON test COMMA
    (125) dictorsetmaker -> . test COLON test dosm_colon_list
    (126) dictorsetmaker -> . test COLON test dosm_colon_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RBRACE          shift and go to state 83
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    dictorsetmaker                 shift and go to state 81
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 82

state 36

    (41) compound_stmt -> if_stmt .

    ENDMARKER       reduce using rule 41 (compound_stmt -> if_stmt .)
    IF              reduce using rule 41 (compound_stmt -> if_stmt .)
    WHILE           reduce using rule 41 (compound_stmt -> if_stmt .)
    FOR             reduce using rule 41 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 41 (compound_stmt -> if_stmt .)
    PRINT           reduce using rule 41 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 41 (compound_stmt -> if_stmt .)
    NOT             reduce using rule 41 (compound_stmt -> if_stmt .)
    LPAR            reduce using rule 41 (compound_stmt -> if_stmt .)
    LSQB            reduce using rule 41 (compound_stmt -> if_stmt .)
    LBRACE          reduce using rule 41 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 41 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 41 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 41 (compound_stmt -> if_stmt .)
    DEDENT          reduce using rule 41 (compound_stmt -> if_stmt .)


state 37

    (64) comparison -> arith_expr .
    (65) comparison -> arith_expr . comparison_list
    (66) comparison_list -> . comp_op arith_expr
    (67) comparison_list -> . comparison_list comp_op arith_expr
    (68) comp_op -> . LESS
    (69) comp_op -> . GREATER
    (70) comp_op -> . EQEQUAL
    (71) comp_op -> . GREATEREQUAL
    (72) comp_op -> . LESSEQUAL
    (73) comp_op -> . NOTEQUAL

    AND             reduce using rule 64 (comparison -> arith_expr .)
    OR              reduce using rule 64 (comparison -> arith_expr .)
    COMMA           reduce using rule 64 (comparison -> arith_expr .)
    EQUAL           reduce using rule 64 (comparison -> arith_expr .)
    NEWLINE         reduce using rule 64 (comparison -> arith_expr .)
    SEMI            reduce using rule 64 (comparison -> arith_expr .)
    RPAR            reduce using rule 64 (comparison -> arith_expr .)
    COLON           reduce using rule 64 (comparison -> arith_expr .)
    RSQB            reduce using rule 64 (comparison -> arith_expr .)
    RBRACE          reduce using rule 64 (comparison -> arith_expr .)
    LESS            shift and go to state 87
    GREATER         shift and go to state 86
    EQEQUAL         shift and go to state 91
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    NOTEQUAL        shift and go to state 84

    comp_op                        shift and go to state 85
    comparison_list                shift and go to state 88

state 38

    (53) test -> or_test .

    COMMA           reduce using rule 53 (test -> or_test .)
    RBRACE          reduce using rule 53 (test -> or_test .)
    EQUAL           reduce using rule 53 (test -> or_test .)
    SEMI            reduce using rule 53 (test -> or_test .)
    NEWLINE         reduce using rule 53 (test -> or_test .)
    RPAR            reduce using rule 53 (test -> or_test .)
    COLON           reduce using rule 53 (test -> or_test .)
    RSQB            reduce using rule 53 (test -> or_test .)


state 39

    (42) compound_stmt -> while_stmt .

    ENDMARKER       reduce using rule 42 (compound_stmt -> while_stmt .)
    IF              reduce using rule 42 (compound_stmt -> while_stmt .)
    WHILE           reduce using rule 42 (compound_stmt -> while_stmt .)
    FOR             reduce using rule 42 (compound_stmt -> while_stmt .)
    DEF             reduce using rule 42 (compound_stmt -> while_stmt .)
    PRINT           reduce using rule 42 (compound_stmt -> while_stmt .)
    RETURN          reduce using rule 42 (compound_stmt -> while_stmt .)
    NOT             reduce using rule 42 (compound_stmt -> while_stmt .)
    LPAR            reduce using rule 42 (compound_stmt -> while_stmt .)
    LSQB            reduce using rule 42 (compound_stmt -> while_stmt .)
    LBRACE          reduce using rule 42 (compound_stmt -> while_stmt .)
    NAME            reduce using rule 42 (compound_stmt -> while_stmt .)
    NUMBER          reduce using rule 42 (compound_stmt -> while_stmt .)
    STRING          reduce using rule 42 (compound_stmt -> while_stmt .)
    DEDENT          reduce using rule 42 (compound_stmt -> while_stmt .)


state 40

    (90) atom -> LPAR RPAR .

    LPAR            reduce using rule 90 (atom -> LPAR RPAR .)
    LSQB            reduce using rule 90 (atom -> LPAR RPAR .)
    STAR            reduce using rule 90 (atom -> LPAR RPAR .)
    SLASH           reduce using rule 90 (atom -> LPAR RPAR .)
    PLUS            reduce using rule 90 (atom -> LPAR RPAR .)
    MINUS           reduce using rule 90 (atom -> LPAR RPAR .)
    LESS            reduce using rule 90 (atom -> LPAR RPAR .)
    GREATER         reduce using rule 90 (atom -> LPAR RPAR .)
    EQEQUAL         reduce using rule 90 (atom -> LPAR RPAR .)
    GREATEREQUAL    reduce using rule 90 (atom -> LPAR RPAR .)
    LESSEQUAL       reduce using rule 90 (atom -> LPAR RPAR .)
    NOTEQUAL        reduce using rule 90 (atom -> LPAR RPAR .)
    AND             reduce using rule 90 (atom -> LPAR RPAR .)
    OR              reduce using rule 90 (atom -> LPAR RPAR .)
    COMMA           reduce using rule 90 (atom -> LPAR RPAR .)
    EQUAL           reduce using rule 90 (atom -> LPAR RPAR .)
    NEWLINE         reduce using rule 90 (atom -> LPAR RPAR .)
    SEMI            reduce using rule 90 (atom -> LPAR RPAR .)
    RPAR            reduce using rule 90 (atom -> LPAR RPAR .)
    COLON           reduce using rule 90 (atom -> LPAR RPAR .)
    RSQB            reduce using rule 90 (atom -> LPAR RPAR .)
    RBRACE          reduce using rule 90 (atom -> LPAR RPAR .)


state 41

    (91) atom -> LPAR testlist_comp . RPAR

    RPAR            shift and go to state 92


state 42

    (107) testlist_comp -> test .
    (108) testlist_comp -> test . COMMA
    (109) testlist_comp -> test . testlist_comp_list
    (110) testlist_comp -> test . testlist_comp_list COMMA
    (111) testlist_comp_list -> . COMMA test
    (112) testlist_comp_list -> . testlist_comp_list COMMA test

    RPAR            reduce using rule 107 (testlist_comp -> test .)
    COMMA           shift and go to state 94

    testlist_comp_list             shift and go to state 93

state 43

    (14) small_stmt_list -> small_stmt small_stmt_list_list .
    (15) small_stmt_list -> small_stmt small_stmt_list_list . SEMI
    (17) small_stmt_list_list -> small_stmt_list_list . SEMI small_stmt

    NEWLINE         reduce using rule 14 (small_stmt_list -> small_stmt small_stmt_list_list .)
    SEMI            shift and go to state 95


state 44

    (11) simple_stmt -> small_stmt NEWLINE .

    ENDMARKER       reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    IF              reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    WHILE           reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    FOR             reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    DEF             reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    PRINT           reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    RETURN          reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    NOT             reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    LPAR            reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    LSQB            reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    LBRACE          reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    NAME            reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    NUMBER          reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    STRING          reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    DEDENT          reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)
    ELSE            reduce using rule 11 (simple_stmt -> small_stmt NEWLINE .)


state 45

    (13) small_stmt_list -> small_stmt SEMI .
    (16) small_stmt_list_list -> SEMI . small_stmt
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         reduce using rule 13 (small_stmt_list -> small_stmt SEMI .)
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 96
    atom_string_list               shift and go to state 5
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    test                           shift and go to state 19
    power                          shift and go to state 15
    print_stmt                     shift and go to state 23
    testlist                       shift and go to state 24
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 46

    (113) trailer -> LPAR . RPAR
    (114) trailer -> LPAR . arglist RPAR
    (129) arglist -> . argument
    (130) arglist -> . argument COMMA
    (131) arglist -> . arglist_list argument
    (132) arglist -> . arglist_list argument COMMA
    (135) argument -> . test
    (136) argument -> . test EQUAL test
    (133) arglist_list -> . argument COMMA
    (134) arglist_list -> . arglist_list argument COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RPAR            shift and go to state 97
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    atom_string_list               shift and go to state 5
    argument                       shift and go to state 101
    not_test                       shift and go to state 10
    arglist                        shift and go to state 98
    arglist_list                   shift and go to state 99
    test                           shift and go to state 100
    power                          shift and go to state 15
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 47

    (87) power -> atom power_list .
    (89) power_list -> power_list . trailer
    (113) trailer -> . LPAR RPAR
    (114) trailer -> . LPAR arglist RPAR
    (115) trailer -> . LSQB subscriptlist RSQB

    STAR            reduce using rule 87 (power -> atom power_list .)
    SLASH           reduce using rule 87 (power -> atom power_list .)
    PLUS            reduce using rule 87 (power -> atom power_list .)
    MINUS           reduce using rule 87 (power -> atom power_list .)
    LESS            reduce using rule 87 (power -> atom power_list .)
    GREATER         reduce using rule 87 (power -> atom power_list .)
    EQEQUAL         reduce using rule 87 (power -> atom power_list .)
    GREATEREQUAL    reduce using rule 87 (power -> atom power_list .)
    LESSEQUAL       reduce using rule 87 (power -> atom power_list .)
    NOTEQUAL        reduce using rule 87 (power -> atom power_list .)
    AND             reduce using rule 87 (power -> atom power_list .)
    OR              reduce using rule 87 (power -> atom power_list .)
    COMMA           reduce using rule 87 (power -> atom power_list .)
    EQUAL           reduce using rule 87 (power -> atom power_list .)
    NEWLINE         reduce using rule 87 (power -> atom power_list .)
    SEMI            reduce using rule 87 (power -> atom power_list .)
    RSQB            reduce using rule 87 (power -> atom power_list .)
    RPAR            reduce using rule 87 (power -> atom power_list .)
    COLON           reduce using rule 87 (power -> atom power_list .)
    RBRACE          reduce using rule 87 (power -> atom power_list .)
    LPAR            shift and go to state 46
    LSQB            shift and go to state 48

    trailer                        shift and go to state 102

state 48

    (115) trailer -> LSQB . subscriptlist RSQB
    (116) subscriptlist -> . subscript
    (117) subscriptlist -> . subscript COMMA
    (118) subscriptlist -> . subscript subscriptlist_list
    (119) subscriptlist -> . subscript subscriptlist_list COMMA
    (122) subscript -> . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    atom_string_list               shift and go to state 5
    not_test                       shift and go to state 10
    test                           shift and go to state 103
    subscript                      shift and go to state 104
    power                          shift and go to state 15
    subscriptlist                  shift and go to state 105
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 49

    (88) power_list -> trailer .

    LPAR            reduce using rule 88 (power_list -> trailer .)
    LSQB            reduce using rule 88 (power_list -> trailer .)
    STAR            reduce using rule 88 (power_list -> trailer .)
    SLASH           reduce using rule 88 (power_list -> trailer .)
    PLUS            reduce using rule 88 (power_list -> trailer .)
    MINUS           reduce using rule 88 (power_list -> trailer .)
    LESS            reduce using rule 88 (power_list -> trailer .)
    GREATER         reduce using rule 88 (power_list -> trailer .)
    EQEQUAL         reduce using rule 88 (power_list -> trailer .)
    GREATEREQUAL    reduce using rule 88 (power_list -> trailer .)
    LESSEQUAL       reduce using rule 88 (power_list -> trailer .)
    NOTEQUAL        reduce using rule 88 (power_list -> trailer .)
    AND             reduce using rule 88 (power_list -> trailer .)
    OR              reduce using rule 88 (power_list -> trailer .)
    COMMA           reduce using rule 88 (power_list -> trailer .)
    EQUAL           reduce using rule 88 (power_list -> trailer .)
    NEWLINE         reduce using rule 88 (power_list -> trailer .)
    SEMI            reduce using rule 88 (power_list -> trailer .)
    RPAR            reduce using rule 88 (power_list -> trailer .)
    COLON           reduce using rule 88 (power_list -> trailer .)
    RSQB            reduce using rule 88 (power_list -> trailer .)
    RBRACE          reduce using rule 88 (power_list -> trailer .)


state 50

    (100) atom_string_list -> atom_string_list STRING .

    STRING          reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    LPAR            reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    LSQB            reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    STAR            reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    SLASH           reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    PLUS            reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    MINUS           reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    LESS            reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    GREATER         reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    EQEQUAL         reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    GREATEREQUAL    reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    LESSEQUAL       reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    NOTEQUAL        reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    AND             reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    OR              reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    COMMA           reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    EQUAL           reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    NEWLINE         reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    SEMI            reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    COLON           reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    RSQB            reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    RPAR            reduce using rule 100 (atom_string_list -> atom_string_list STRING .)
    RBRACE          reduce using rule 100 (atom_string_list -> atom_string_list STRING .)


state 51

    (12) simple_stmt -> small_stmt_list NEWLINE .

    ENDMARKER       reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    IF              reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    WHILE           reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    FOR             reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    DEF             reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    PRINT           reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    RETURN          reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    NOT             reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    LPAR            reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    LSQB            reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    LBRACE          reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    NAME            reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    NUMBER          reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    STRING          reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    DEDENT          reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)
    ELSE            reduce using rule 12 (simple_stmt -> small_stmt_list NEWLINE .)


state 52

    (48) while_stmt -> WHILE test . COLON suite

    COLON           shift and go to state 106


state 53

    (59) and_test -> not_test and_test_list .
    (61) and_test_list -> and_test_list . AND not_test

    OR              reduce using rule 59 (and_test -> not_test and_test_list .)
    COMMA           reduce using rule 59 (and_test -> not_test and_test_list .)
    RSQB            reduce using rule 59 (and_test -> not_test and_test_list .)
    RPAR            reduce using rule 59 (and_test -> not_test and_test_list .)
    EQUAL           reduce using rule 59 (and_test -> not_test and_test_list .)
    NEWLINE         reduce using rule 59 (and_test -> not_test and_test_list .)
    SEMI            reduce using rule 59 (and_test -> not_test and_test_list .)
    COLON           reduce using rule 59 (and_test -> not_test and_test_list .)
    RBRACE          reduce using rule 59 (and_test -> not_test and_test_list .)
    AND             shift and go to state 107


state 54

    (60) and_test_list -> AND . not_test
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    power                          shift and go to state 15
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    not_test                       shift and go to state 108
    atom                           shift and go to state 4

state 55

    (23) print_stmt -> PRINT print_list .

    NEWLINE         reduce using rule 23 (print_stmt -> PRINT print_list .)
    SEMI            reduce using rule 23 (print_stmt -> PRINT print_list .)


state 56

    (22) print_stmt -> PRINT test .
    (24) print_list -> test . COMMA
    (25) print_list -> test . print_list_list
    (26) print_list -> test . print_list_list COMMA
    (27) print_list_list -> . COMMA test
    (28) print_list_list -> . print_list_list COMMA test

    NEWLINE         reduce using rule 22 (print_stmt -> PRINT test .)
    SEMI            reduce using rule 22 (print_stmt -> PRINT test .)
    COMMA           shift and go to state 109

    print_list_list                shift and go to state 110

state 57

    (30) return_stmt -> RETURN testlist .

    SEMI            reduce using rule 30 (return_stmt -> RETURN testlist .)
    NEWLINE         reduce using rule 30 (return_stmt -> RETURN testlist .)


state 58

    (50) funcdef -> DEF NAME . parameters COLON suite
    (51) parameters -> . LPAR RPAR
    (52) parameters -> . LPAR varargslist RPAR

    LPAR            shift and go to state 111

    parameters                     shift and go to state 112

state 59

    (1) program -> file_input_star ENDMARKER .

    $end            reduce using rule 1 (program -> file_input_star ENDMARKER .)


state 60

    (4) file_input_star -> file_input_star stmt .

    ENDMARKER       reduce using rule 4 (file_input_star -> file_input_star stmt .)
    IF              reduce using rule 4 (file_input_star -> file_input_star stmt .)
    WHILE           reduce using rule 4 (file_input_star -> file_input_star stmt .)
    FOR             reduce using rule 4 (file_input_star -> file_input_star stmt .)
    DEF             reduce using rule 4 (file_input_star -> file_input_star stmt .)
    PRINT           reduce using rule 4 (file_input_star -> file_input_star stmt .)
    RETURN          reduce using rule 4 (file_input_star -> file_input_star stmt .)
    NOT             reduce using rule 4 (file_input_star -> file_input_star stmt .)
    LPAR            reduce using rule 4 (file_input_star -> file_input_star stmt .)
    LSQB            reduce using rule 4 (file_input_star -> file_input_star stmt .)
    LBRACE          reduce using rule 4 (file_input_star -> file_input_star stmt .)
    NAME            reduce using rule 4 (file_input_star -> file_input_star stmt .)
    NUMBER          reduce using rule 4 (file_input_star -> file_input_star stmt .)
    STRING          reduce using rule 4 (file_input_star -> file_input_star stmt .)


state 61

    (84) term_op -> STAR . power
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    power                          shift and go to state 113
    atom                           shift and go to state 4
    atom_string_list               shift and go to state 5

state 62

    (81) term -> power term_list .
    (83) term_list -> term_list . term_op
    (84) term_op -> . STAR power
    (85) term_op -> . SLASH power

    PLUS            reduce using rule 81 (term -> power term_list .)
    MINUS           reduce using rule 81 (term -> power term_list .)
    LESS            reduce using rule 81 (term -> power term_list .)
    GREATER         reduce using rule 81 (term -> power term_list .)
    EQEQUAL         reduce using rule 81 (term -> power term_list .)
    GREATEREQUAL    reduce using rule 81 (term -> power term_list .)
    LESSEQUAL       reduce using rule 81 (term -> power term_list .)
    NOTEQUAL        reduce using rule 81 (term -> power term_list .)
    AND             reduce using rule 81 (term -> power term_list .)
    OR              reduce using rule 81 (term -> power term_list .)
    COMMA           reduce using rule 81 (term -> power term_list .)
    EQUAL           reduce using rule 81 (term -> power term_list .)
    NEWLINE         reduce using rule 81 (term -> power term_list .)
    SEMI            reduce using rule 81 (term -> power term_list .)
    RPAR            reduce using rule 81 (term -> power term_list .)
    COLON           reduce using rule 81 (term -> power term_list .)
    RSQB            reduce using rule 81 (term -> power term_list .)
    RBRACE          reduce using rule 81 (term -> power term_list .)
    STAR            shift and go to state 61
    SLASH           shift and go to state 63

    term_op                        shift and go to state 114

state 63

    (85) term_op -> SLASH . power
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    power                          shift and go to state 115
    atom                           shift and go to state 4
    atom_string_list               shift and go to state 5

state 64

    (82) term_list -> term_op .

    STAR            reduce using rule 82 (term_list -> term_op .)
    SLASH           reduce using rule 82 (term_list -> term_op .)
    PLUS            reduce using rule 82 (term_list -> term_op .)
    MINUS           reduce using rule 82 (term_list -> term_op .)
    LESS            reduce using rule 82 (term_list -> term_op .)
    GREATER         reduce using rule 82 (term_list -> term_op .)
    EQEQUAL         reduce using rule 82 (term_list -> term_op .)
    GREATEREQUAL    reduce using rule 82 (term_list -> term_op .)
    LESSEQUAL       reduce using rule 82 (term_list -> term_op .)
    NOTEQUAL        reduce using rule 82 (term_list -> term_op .)
    AND             reduce using rule 82 (term_list -> term_op .)
    OR              reduce using rule 82 (term_list -> term_op .)
    COMMA           reduce using rule 82 (term_list -> term_op .)
    EQUAL           reduce using rule 82 (term_list -> term_op .)
    NEWLINE         reduce using rule 82 (term_list -> term_op .)
    SEMI            reduce using rule 82 (term_list -> term_op .)
    RPAR            reduce using rule 82 (term_list -> term_op .)
    COLON           reduce using rule 82 (term_list -> term_op .)
    RSQB            reduce using rule 82 (term_list -> term_op .)
    RBRACE          reduce using rule 82 (term_list -> term_op .)


state 65

    (37) testlist -> test testlist_list .
    (38) testlist -> test testlist_list . COMMA
    (40) testlist_list -> testlist_list . COMMA test

    EQUAL           reduce using rule 37 (testlist -> test testlist_list .)
    NEWLINE         reduce using rule 37 (testlist -> test testlist_list .)
    SEMI            reduce using rule 37 (testlist -> test testlist_list .)
    COLON           reduce using rule 37 (testlist -> test testlist_list .)
    COMMA           shift and go to state 116


state 66

    (36) testlist -> test COMMA .
    (39) testlist_list -> COMMA . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    EQUAL           reduce using rule 36 (testlist -> test COMMA .)
    NEWLINE         reduce using rule 36 (testlist -> test COMMA .)
    SEMI            reduce using rule 36 (testlist -> test COMMA .)
    COLON           reduce using rule 36 (testlist -> test COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 117

state 67

    (49) for_stmt -> FOR NAME . IN testlist COLON suite

    IN              shift and go to state 118


state 68

    (32) expr_stmt -> testlist equal_list .

    SEMI            reduce using rule 32 (expr_stmt -> testlist equal_list .)
    NEWLINE         reduce using rule 32 (expr_stmt -> testlist equal_list .)


state 69

    (33) equal_list -> EQUAL . testlist
    (34) equal_list -> EQUAL . testlist equal_list
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    atom_string_list               shift and go to state 5
    not_test                       shift and go to state 10
    test                           shift and go to state 19
    power                          shift and go to state 15
    testlist                       shift and go to state 119
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 70

    (63) not_test -> NOT not_test .

    AND             reduce using rule 63 (not_test -> NOT not_test .)
    OR              reduce using rule 63 (not_test -> NOT not_test .)
    COMMA           reduce using rule 63 (not_test -> NOT not_test .)
    RSQB            reduce using rule 63 (not_test -> NOT not_test .)
    EQUAL           reduce using rule 63 (not_test -> NOT not_test .)
    NEWLINE         reduce using rule 63 (not_test -> NOT not_test .)
    SEMI            reduce using rule 63 (not_test -> NOT not_test .)
    RPAR            reduce using rule 63 (not_test -> NOT not_test .)
    COLON           reduce using rule 63 (not_test -> NOT not_test .)
    RBRACE          reduce using rule 63 (not_test -> NOT not_test .)


state 71

    (55) or_test -> and_test or_test_list .
    (57) or_test_list -> or_test_list . OR and_test

    COMMA           reduce using rule 55 (or_test -> and_test or_test_list .)
    EQUAL           reduce using rule 55 (or_test -> and_test or_test_list .)
    NEWLINE         reduce using rule 55 (or_test -> and_test or_test_list .)
    SEMI            reduce using rule 55 (or_test -> and_test or_test_list .)
    COLON           reduce using rule 55 (or_test -> and_test or_test_list .)
    RSQB            reduce using rule 55 (or_test -> and_test or_test_list .)
    RBRACE          reduce using rule 55 (or_test -> and_test or_test_list .)
    RPAR            reduce using rule 55 (or_test -> and_test or_test_list .)
    OR              shift and go to state 120


state 72

    (56) or_test_list -> OR . and_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    power                          shift and go to state 15
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    and_test                       shift and go to state 121
    not_test                       shift and go to state 10
    atom                           shift and go to state 4

state 73

    (93) atom -> LSQB listmaker . RSQB

    RSQB            shift and go to state 122


state 74

    (101) listmaker -> test .
    (102) listmaker -> test . COMMA
    (103) listmaker -> test . listmaker_list
    (104) listmaker -> test . listmaker_list COMMA
    (105) listmaker_list -> . COMMA test
    (106) listmaker_list -> . listmaker_list COMMA test

    RSQB            reduce using rule 101 (listmaker -> test .)
    COMMA           shift and go to state 123

    listmaker_list                 shift and go to state 124

state 75

    (92) atom -> LSQB RSQB .

    LPAR            reduce using rule 92 (atom -> LSQB RSQB .)
    LSQB            reduce using rule 92 (atom -> LSQB RSQB .)
    STAR            reduce using rule 92 (atom -> LSQB RSQB .)
    SLASH           reduce using rule 92 (atom -> LSQB RSQB .)
    PLUS            reduce using rule 92 (atom -> LSQB RSQB .)
    MINUS           reduce using rule 92 (atom -> LSQB RSQB .)
    LESS            reduce using rule 92 (atom -> LSQB RSQB .)
    GREATER         reduce using rule 92 (atom -> LSQB RSQB .)
    EQEQUAL         reduce using rule 92 (atom -> LSQB RSQB .)
    GREATEREQUAL    reduce using rule 92 (atom -> LSQB RSQB .)
    LESSEQUAL       reduce using rule 92 (atom -> LSQB RSQB .)
    NOTEQUAL        reduce using rule 92 (atom -> LSQB RSQB .)
    AND             reduce using rule 92 (atom -> LSQB RSQB .)
    OR              reduce using rule 92 (atom -> LSQB RSQB .)
    COMMA           reduce using rule 92 (atom -> LSQB RSQB .)
    EQUAL           reduce using rule 92 (atom -> LSQB RSQB .)
    NEWLINE         reduce using rule 92 (atom -> LSQB RSQB .)
    SEMI            reduce using rule 92 (atom -> LSQB RSQB .)
    RPAR            reduce using rule 92 (atom -> LSQB RSQB .)
    COLON           reduce using rule 92 (atom -> LSQB RSQB .)
    RSQB            reduce using rule 92 (atom -> LSQB RSQB .)
    RBRACE          reduce using rule 92 (atom -> LSQB RSQB .)


state 76

    (45) if_stmt -> IF test . COLON suite
    (46) if_stmt -> IF test . COLON suite else_stmt

    COLON           shift and go to state 125


state 77

    (75) arith_expr -> term arith_expr_list .
    (77) arith_expr_list -> arith_expr_list . arith_op
    (78) arith_op -> . PLUS term
    (79) arith_op -> . MINUS term

    LESS            reduce using rule 75 (arith_expr -> term arith_expr_list .)
    GREATER         reduce using rule 75 (arith_expr -> term arith_expr_list .)
    EQEQUAL         reduce using rule 75 (arith_expr -> term arith_expr_list .)
    GREATEREQUAL    reduce using rule 75 (arith_expr -> term arith_expr_list .)
    LESSEQUAL       reduce using rule 75 (arith_expr -> term arith_expr_list .)
    NOTEQUAL        reduce using rule 75 (arith_expr -> term arith_expr_list .)
    AND             reduce using rule 75 (arith_expr -> term arith_expr_list .)
    OR              reduce using rule 75 (arith_expr -> term arith_expr_list .)
    COLON           reduce using rule 75 (arith_expr -> term arith_expr_list .)
    COMMA           reduce using rule 75 (arith_expr -> term arith_expr_list .)
    EQUAL           reduce using rule 75 (arith_expr -> term arith_expr_list .)
    NEWLINE         reduce using rule 75 (arith_expr -> term arith_expr_list .)
    SEMI            reduce using rule 75 (arith_expr -> term arith_expr_list .)
    RSQB            reduce using rule 75 (arith_expr -> term arith_expr_list .)
    RPAR            reduce using rule 75 (arith_expr -> term arith_expr_list .)
    RBRACE          reduce using rule 75 (arith_expr -> term arith_expr_list .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80

    arith_op                       shift and go to state 126

state 78

    (76) arith_expr_list -> arith_op .

    PLUS            reduce using rule 76 (arith_expr_list -> arith_op .)
    MINUS           reduce using rule 76 (arith_expr_list -> arith_op .)
    LESS            reduce using rule 76 (arith_expr_list -> arith_op .)
    GREATER         reduce using rule 76 (arith_expr_list -> arith_op .)
    EQEQUAL         reduce using rule 76 (arith_expr_list -> arith_op .)
    GREATEREQUAL    reduce using rule 76 (arith_expr_list -> arith_op .)
    LESSEQUAL       reduce using rule 76 (arith_expr_list -> arith_op .)
    NOTEQUAL        reduce using rule 76 (arith_expr_list -> arith_op .)
    AND             reduce using rule 76 (arith_expr_list -> arith_op .)
    OR              reduce using rule 76 (arith_expr_list -> arith_op .)
    COMMA           reduce using rule 76 (arith_expr_list -> arith_op .)
    EQUAL           reduce using rule 76 (arith_expr_list -> arith_op .)
    NEWLINE         reduce using rule 76 (arith_expr_list -> arith_op .)
    SEMI            reduce using rule 76 (arith_expr_list -> arith_op .)
    RPAR            reduce using rule 76 (arith_expr_list -> arith_op .)
    COLON           reduce using rule 76 (arith_expr_list -> arith_op .)
    RSQB            reduce using rule 76 (arith_expr_list -> arith_op .)
    RBRACE          reduce using rule 76 (arith_expr_list -> arith_op .)


state 79

    (78) arith_op -> PLUS . term
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    term                           shift and go to state 127
    power                          shift and go to state 15
    atom                           shift and go to state 4
    atom_string_list               shift and go to state 5

state 80

    (79) arith_op -> MINUS . term
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    term                           shift and go to state 128
    power                          shift and go to state 15
    atom                           shift and go to state 4
    atom_string_list               shift and go to state 5

state 81

    (95) atom -> LBRACE dictorsetmaker . RBRACE

    RBRACE          shift and go to state 129


state 82

    (123) dictorsetmaker -> test . COLON test
    (124) dictorsetmaker -> test . COLON test COMMA
    (125) dictorsetmaker -> test . COLON test dosm_colon_list
    (126) dictorsetmaker -> test . COLON test dosm_colon_list COMMA

    COLON           shift and go to state 130


state 83

    (94) atom -> LBRACE RBRACE .

    LPAR            reduce using rule 94 (atom -> LBRACE RBRACE .)
    LSQB            reduce using rule 94 (atom -> LBRACE RBRACE .)
    STAR            reduce using rule 94 (atom -> LBRACE RBRACE .)
    SLASH           reduce using rule 94 (atom -> LBRACE RBRACE .)
    PLUS            reduce using rule 94 (atom -> LBRACE RBRACE .)
    MINUS           reduce using rule 94 (atom -> LBRACE RBRACE .)
    LESS            reduce using rule 94 (atom -> LBRACE RBRACE .)
    GREATER         reduce using rule 94 (atom -> LBRACE RBRACE .)
    EQEQUAL         reduce using rule 94 (atom -> LBRACE RBRACE .)
    GREATEREQUAL    reduce using rule 94 (atom -> LBRACE RBRACE .)
    LESSEQUAL       reduce using rule 94 (atom -> LBRACE RBRACE .)
    NOTEQUAL        reduce using rule 94 (atom -> LBRACE RBRACE .)
    AND             reduce using rule 94 (atom -> LBRACE RBRACE .)
    OR              reduce using rule 94 (atom -> LBRACE RBRACE .)
    COMMA           reduce using rule 94 (atom -> LBRACE RBRACE .)
    EQUAL           reduce using rule 94 (atom -> LBRACE RBRACE .)
    NEWLINE         reduce using rule 94 (atom -> LBRACE RBRACE .)
    SEMI            reduce using rule 94 (atom -> LBRACE RBRACE .)
    RPAR            reduce using rule 94 (atom -> LBRACE RBRACE .)
    COLON           reduce using rule 94 (atom -> LBRACE RBRACE .)
    RSQB            reduce using rule 94 (atom -> LBRACE RBRACE .)
    RBRACE          reduce using rule 94 (atom -> LBRACE RBRACE .)


state 84

    (73) comp_op -> NOTEQUAL .

    LPAR            reduce using rule 73 (comp_op -> NOTEQUAL .)
    LSQB            reduce using rule 73 (comp_op -> NOTEQUAL .)
    LBRACE          reduce using rule 73 (comp_op -> NOTEQUAL .)
    NAME            reduce using rule 73 (comp_op -> NOTEQUAL .)
    NUMBER          reduce using rule 73 (comp_op -> NOTEQUAL .)
    STRING          reduce using rule 73 (comp_op -> NOTEQUAL .)


state 85

    (66) comparison_list -> comp_op . arith_expr
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    arith_expr                     shift and go to state 131
    power                          shift and go to state 15
    atom_string_list               shift and go to state 5
    term                           shift and go to state 34
    atom                           shift and go to state 4

state 86

    (69) comp_op -> GREATER .

    LPAR            reduce using rule 69 (comp_op -> GREATER .)
    LSQB            reduce using rule 69 (comp_op -> GREATER .)
    LBRACE          reduce using rule 69 (comp_op -> GREATER .)
    NAME            reduce using rule 69 (comp_op -> GREATER .)
    NUMBER          reduce using rule 69 (comp_op -> GREATER .)
    STRING          reduce using rule 69 (comp_op -> GREATER .)


state 87

    (68) comp_op -> LESS .

    LPAR            reduce using rule 68 (comp_op -> LESS .)
    LSQB            reduce using rule 68 (comp_op -> LESS .)
    LBRACE          reduce using rule 68 (comp_op -> LESS .)
    NAME            reduce using rule 68 (comp_op -> LESS .)
    NUMBER          reduce using rule 68 (comp_op -> LESS .)
    STRING          reduce using rule 68 (comp_op -> LESS .)


state 88

    (65) comparison -> arith_expr comparison_list .
    (67) comparison_list -> comparison_list . comp_op arith_expr
    (68) comp_op -> . LESS
    (69) comp_op -> . GREATER
    (70) comp_op -> . EQEQUAL
    (71) comp_op -> . GREATEREQUAL
    (72) comp_op -> . LESSEQUAL
    (73) comp_op -> . NOTEQUAL

    AND             reduce using rule 65 (comparison -> arith_expr comparison_list .)
    OR              reduce using rule 65 (comparison -> arith_expr comparison_list .)
    COMMA           reduce using rule 65 (comparison -> arith_expr comparison_list .)
    EQUAL           reduce using rule 65 (comparison -> arith_expr comparison_list .)
    NEWLINE         reduce using rule 65 (comparison -> arith_expr comparison_list .)
    SEMI            reduce using rule 65 (comparison -> arith_expr comparison_list .)
    RPAR            reduce using rule 65 (comparison -> arith_expr comparison_list .)
    COLON           reduce using rule 65 (comparison -> arith_expr comparison_list .)
    RSQB            reduce using rule 65 (comparison -> arith_expr comparison_list .)
    RBRACE          reduce using rule 65 (comparison -> arith_expr comparison_list .)
    LESS            shift and go to state 87
    GREATER         shift and go to state 86
    EQEQUAL         shift and go to state 91
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    NOTEQUAL        shift and go to state 84

    comp_op                        shift and go to state 132

state 89

    (71) comp_op -> GREATEREQUAL .

    LPAR            reduce using rule 71 (comp_op -> GREATEREQUAL .)
    LSQB            reduce using rule 71 (comp_op -> GREATEREQUAL .)
    LBRACE          reduce using rule 71 (comp_op -> GREATEREQUAL .)
    NAME            reduce using rule 71 (comp_op -> GREATEREQUAL .)
    NUMBER          reduce using rule 71 (comp_op -> GREATEREQUAL .)
    STRING          reduce using rule 71 (comp_op -> GREATEREQUAL .)


state 90

    (72) comp_op -> LESSEQUAL .

    LPAR            reduce using rule 72 (comp_op -> LESSEQUAL .)
    LSQB            reduce using rule 72 (comp_op -> LESSEQUAL .)
    LBRACE          reduce using rule 72 (comp_op -> LESSEQUAL .)
    NAME            reduce using rule 72 (comp_op -> LESSEQUAL .)
    NUMBER          reduce using rule 72 (comp_op -> LESSEQUAL .)
    STRING          reduce using rule 72 (comp_op -> LESSEQUAL .)


state 91

    (70) comp_op -> EQEQUAL .

    LPAR            reduce using rule 70 (comp_op -> EQEQUAL .)
    LSQB            reduce using rule 70 (comp_op -> EQEQUAL .)
    LBRACE          reduce using rule 70 (comp_op -> EQEQUAL .)
    NAME            reduce using rule 70 (comp_op -> EQEQUAL .)
    NUMBER          reduce using rule 70 (comp_op -> EQEQUAL .)
    STRING          reduce using rule 70 (comp_op -> EQEQUAL .)


state 92

    (91) atom -> LPAR testlist_comp RPAR .

    LPAR            reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    LSQB            reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    STAR            reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    SLASH           reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    PLUS            reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    MINUS           reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    LESS            reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    GREATER         reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    EQEQUAL         reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    GREATEREQUAL    reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    LESSEQUAL       reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    NOTEQUAL        reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    AND             reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    OR              reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    COMMA           reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    EQUAL           reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    NEWLINE         reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    SEMI            reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    RPAR            reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    COLON           reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    RSQB            reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)
    RBRACE          reduce using rule 91 (atom -> LPAR testlist_comp RPAR .)


state 93

    (109) testlist_comp -> test testlist_comp_list .
    (110) testlist_comp -> test testlist_comp_list . COMMA
    (112) testlist_comp_list -> testlist_comp_list . COMMA test

    RPAR            reduce using rule 109 (testlist_comp -> test testlist_comp_list .)
    COMMA           shift and go to state 133


state 94

    (108) testlist_comp -> test COMMA .
    (111) testlist_comp_list -> COMMA . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RPAR            reduce using rule 108 (testlist_comp -> test COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 134

state 95

    (15) small_stmt_list -> small_stmt small_stmt_list_list SEMI .
    (17) small_stmt_list_list -> small_stmt_list_list SEMI . small_stmt
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         reduce using rule 15 (small_stmt_list -> small_stmt small_stmt_list_list SEMI .)
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 135
    atom_string_list               shift and go to state 5
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    test                           shift and go to state 19
    power                          shift and go to state 15
    print_stmt                     shift and go to state 23
    testlist                       shift and go to state 24
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 96

    (16) small_stmt_list_list -> SEMI small_stmt .

    SEMI            reduce using rule 16 (small_stmt_list_list -> SEMI small_stmt .)
    NEWLINE         reduce using rule 16 (small_stmt_list_list -> SEMI small_stmt .)


state 97

    (113) trailer -> LPAR RPAR .

    LPAR            reduce using rule 113 (trailer -> LPAR RPAR .)
    LSQB            reduce using rule 113 (trailer -> LPAR RPAR .)
    STAR            reduce using rule 113 (trailer -> LPAR RPAR .)
    SLASH           reduce using rule 113 (trailer -> LPAR RPAR .)
    PLUS            reduce using rule 113 (trailer -> LPAR RPAR .)
    MINUS           reduce using rule 113 (trailer -> LPAR RPAR .)
    LESS            reduce using rule 113 (trailer -> LPAR RPAR .)
    GREATER         reduce using rule 113 (trailer -> LPAR RPAR .)
    EQEQUAL         reduce using rule 113 (trailer -> LPAR RPAR .)
    GREATEREQUAL    reduce using rule 113 (trailer -> LPAR RPAR .)
    LESSEQUAL       reduce using rule 113 (trailer -> LPAR RPAR .)
    NOTEQUAL        reduce using rule 113 (trailer -> LPAR RPAR .)
    AND             reduce using rule 113 (trailer -> LPAR RPAR .)
    OR              reduce using rule 113 (trailer -> LPAR RPAR .)
    COMMA           reduce using rule 113 (trailer -> LPAR RPAR .)
    EQUAL           reduce using rule 113 (trailer -> LPAR RPAR .)
    NEWLINE         reduce using rule 113 (trailer -> LPAR RPAR .)
    SEMI            reduce using rule 113 (trailer -> LPAR RPAR .)
    RPAR            reduce using rule 113 (trailer -> LPAR RPAR .)
    COLON           reduce using rule 113 (trailer -> LPAR RPAR .)
    RSQB            reduce using rule 113 (trailer -> LPAR RPAR .)
    RBRACE          reduce using rule 113 (trailer -> LPAR RPAR .)


state 98

    (114) trailer -> LPAR arglist . RPAR

    RPAR            shift and go to state 136


state 99

    (131) arglist -> arglist_list . argument
    (132) arglist -> arglist_list . argument COMMA
    (134) arglist_list -> arglist_list . argument COMMA
    (135) argument -> . test
    (136) argument -> . test EQUAL test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    argument                       shift and go to state 137
    and_test                       shift and go to state 28
    or_test                        shift and go to state 38
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 100

state 100

    (135) argument -> test .
    (136) argument -> test . EQUAL test

    COMMA           reduce using rule 135 (argument -> test .)
    RPAR            reduce using rule 135 (argument -> test .)
    EQUAL           shift and go to state 138


state 101

    (129) arglist -> argument .
    (130) arglist -> argument . COMMA
    (133) arglist_list -> argument . COMMA

    RPAR            reduce using rule 129 (arglist -> argument .)
    COMMA           shift and go to state 139


state 102

    (89) power_list -> power_list trailer .

    LPAR            reduce using rule 89 (power_list -> power_list trailer .)
    LSQB            reduce using rule 89 (power_list -> power_list trailer .)
    STAR            reduce using rule 89 (power_list -> power_list trailer .)
    SLASH           reduce using rule 89 (power_list -> power_list trailer .)
    PLUS            reduce using rule 89 (power_list -> power_list trailer .)
    MINUS           reduce using rule 89 (power_list -> power_list trailer .)
    LESS            reduce using rule 89 (power_list -> power_list trailer .)
    GREATER         reduce using rule 89 (power_list -> power_list trailer .)
    EQEQUAL         reduce using rule 89 (power_list -> power_list trailer .)
    GREATEREQUAL    reduce using rule 89 (power_list -> power_list trailer .)
    LESSEQUAL       reduce using rule 89 (power_list -> power_list trailer .)
    NOTEQUAL        reduce using rule 89 (power_list -> power_list trailer .)
    AND             reduce using rule 89 (power_list -> power_list trailer .)
    OR              reduce using rule 89 (power_list -> power_list trailer .)
    COMMA           reduce using rule 89 (power_list -> power_list trailer .)
    EQUAL           reduce using rule 89 (power_list -> power_list trailer .)
    NEWLINE         reduce using rule 89 (power_list -> power_list trailer .)
    SEMI            reduce using rule 89 (power_list -> power_list trailer .)
    RPAR            reduce using rule 89 (power_list -> power_list trailer .)
    COLON           reduce using rule 89 (power_list -> power_list trailer .)
    RSQB            reduce using rule 89 (power_list -> power_list trailer .)
    RBRACE          reduce using rule 89 (power_list -> power_list trailer .)


state 103

    (122) subscript -> test .

    COMMA           reduce using rule 122 (subscript -> test .)
    RSQB            reduce using rule 122 (subscript -> test .)


state 104

    (116) subscriptlist -> subscript .
    (117) subscriptlist -> subscript . COMMA
    (118) subscriptlist -> subscript . subscriptlist_list
    (119) subscriptlist -> subscript . subscriptlist_list COMMA
    (120) subscriptlist_list -> . COMMA subscript
    (121) subscriptlist_list -> . subscriptlist_list COMMA subscript

    RSQB            reduce using rule 116 (subscriptlist -> subscript .)
    COMMA           shift and go to state 141

    subscriptlist_list             shift and go to state 140

state 105

    (115) trailer -> LSQB subscriptlist . RSQB

    RSQB            shift and go to state 142


state 106

    (48) while_stmt -> WHILE test COLON . suite
    (5) suite -> . simple_stmt
    (6) suite -> . NEWLINE INDENT stmt_list DEDENT
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         shift and go to state 143
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    print_stmt                     shift and go to state 23
    test                           shift and go to state 19
    suite                          shift and go to state 144
    power                          shift and go to state 15
    simple_stmt                    shift and go to state 145
    testlist                       shift and go to state 24
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 107

    (61) and_test_list -> and_test_list AND . not_test
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    power                          shift and go to state 15
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    not_test                       shift and go to state 146
    atom                           shift and go to state 4

state 108

    (60) and_test_list -> AND not_test .

    AND             reduce using rule 60 (and_test_list -> AND not_test .)
    OR              reduce using rule 60 (and_test_list -> AND not_test .)
    COMMA           reduce using rule 60 (and_test_list -> AND not_test .)
    EQUAL           reduce using rule 60 (and_test_list -> AND not_test .)
    NEWLINE         reduce using rule 60 (and_test_list -> AND not_test .)
    SEMI            reduce using rule 60 (and_test_list -> AND not_test .)
    RPAR            reduce using rule 60 (and_test_list -> AND not_test .)
    COLON           reduce using rule 60 (and_test_list -> AND not_test .)
    RSQB            reduce using rule 60 (and_test_list -> AND not_test .)
    RBRACE          reduce using rule 60 (and_test_list -> AND not_test .)


state 109

    (24) print_list -> test COMMA .
    (27) print_list_list -> COMMA . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         reduce using rule 24 (print_list -> test COMMA .)
    SEMI            reduce using rule 24 (print_list -> test COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 147

state 110

    (25) print_list -> test print_list_list .
    (26) print_list -> test print_list_list . COMMA
    (28) print_list_list -> print_list_list . COMMA test

    NEWLINE         reduce using rule 25 (print_list -> test print_list_list .)
    SEMI            reduce using rule 25 (print_list -> test print_list_list .)
    COMMA           shift and go to state 148


state 111

    (51) parameters -> LPAR . RPAR
    (52) parameters -> LPAR . varargslist RPAR
    (137) varargslist -> . fpdef
    (138) varargslist -> . fpdef COMMA
    (139) varargslist -> . fpdef varargslist_list
    (140) varargslist -> . fpdef varargslist_list COMMA
    (141) varargslist -> . fpdef EQUAL test
    (142) varargslist -> . fpdef EQUAL test COMMA
    (143) varargslist -> . fpdef EQUAL test varargslist_list
    (144) varargslist -> . fpdef EQUAL test varargslist_list COMMA
    (149) fpdef -> . NAME
    (150) fpdef -> . LPAR fplist RPAR

    RPAR            shift and go to state 152
    NAME            shift and go to state 150
    LPAR            shift and go to state 149

    fpdef                          shift and go to state 151
    varargslist                    shift and go to state 153

state 112

    (50) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 154


state 113

    (84) term_op -> STAR power .

    STAR            reduce using rule 84 (term_op -> STAR power .)
    SLASH           reduce using rule 84 (term_op -> STAR power .)
    PLUS            reduce using rule 84 (term_op -> STAR power .)
    MINUS           reduce using rule 84 (term_op -> STAR power .)
    LESS            reduce using rule 84 (term_op -> STAR power .)
    GREATER         reduce using rule 84 (term_op -> STAR power .)
    EQEQUAL         reduce using rule 84 (term_op -> STAR power .)
    GREATEREQUAL    reduce using rule 84 (term_op -> STAR power .)
    LESSEQUAL       reduce using rule 84 (term_op -> STAR power .)
    NOTEQUAL        reduce using rule 84 (term_op -> STAR power .)
    AND             reduce using rule 84 (term_op -> STAR power .)
    OR              reduce using rule 84 (term_op -> STAR power .)
    COMMA           reduce using rule 84 (term_op -> STAR power .)
    EQUAL           reduce using rule 84 (term_op -> STAR power .)
    NEWLINE         reduce using rule 84 (term_op -> STAR power .)
    SEMI            reduce using rule 84 (term_op -> STAR power .)
    RPAR            reduce using rule 84 (term_op -> STAR power .)
    COLON           reduce using rule 84 (term_op -> STAR power .)
    RSQB            reduce using rule 84 (term_op -> STAR power .)
    RBRACE          reduce using rule 84 (term_op -> STAR power .)


state 114

    (83) term_list -> term_list term_op .

    STAR            reduce using rule 83 (term_list -> term_list term_op .)
    SLASH           reduce using rule 83 (term_list -> term_list term_op .)
    PLUS            reduce using rule 83 (term_list -> term_list term_op .)
    MINUS           reduce using rule 83 (term_list -> term_list term_op .)
    LESS            reduce using rule 83 (term_list -> term_list term_op .)
    GREATER         reduce using rule 83 (term_list -> term_list term_op .)
    EQEQUAL         reduce using rule 83 (term_list -> term_list term_op .)
    GREATEREQUAL    reduce using rule 83 (term_list -> term_list term_op .)
    LESSEQUAL       reduce using rule 83 (term_list -> term_list term_op .)
    NOTEQUAL        reduce using rule 83 (term_list -> term_list term_op .)
    AND             reduce using rule 83 (term_list -> term_list term_op .)
    OR              reduce using rule 83 (term_list -> term_list term_op .)
    COMMA           reduce using rule 83 (term_list -> term_list term_op .)
    EQUAL           reduce using rule 83 (term_list -> term_list term_op .)
    NEWLINE         reduce using rule 83 (term_list -> term_list term_op .)
    SEMI            reduce using rule 83 (term_list -> term_list term_op .)
    RPAR            reduce using rule 83 (term_list -> term_list term_op .)
    COLON           reduce using rule 83 (term_list -> term_list term_op .)
    RSQB            reduce using rule 83 (term_list -> term_list term_op .)
    RBRACE          reduce using rule 83 (term_list -> term_list term_op .)


state 115

    (85) term_op -> SLASH power .

    STAR            reduce using rule 85 (term_op -> SLASH power .)
    SLASH           reduce using rule 85 (term_op -> SLASH power .)
    PLUS            reduce using rule 85 (term_op -> SLASH power .)
    MINUS           reduce using rule 85 (term_op -> SLASH power .)
    LESS            reduce using rule 85 (term_op -> SLASH power .)
    GREATER         reduce using rule 85 (term_op -> SLASH power .)
    EQEQUAL         reduce using rule 85 (term_op -> SLASH power .)
    GREATEREQUAL    reduce using rule 85 (term_op -> SLASH power .)
    LESSEQUAL       reduce using rule 85 (term_op -> SLASH power .)
    NOTEQUAL        reduce using rule 85 (term_op -> SLASH power .)
    AND             reduce using rule 85 (term_op -> SLASH power .)
    OR              reduce using rule 85 (term_op -> SLASH power .)
    COMMA           reduce using rule 85 (term_op -> SLASH power .)
    EQUAL           reduce using rule 85 (term_op -> SLASH power .)
    NEWLINE         reduce using rule 85 (term_op -> SLASH power .)
    SEMI            reduce using rule 85 (term_op -> SLASH power .)
    RPAR            reduce using rule 85 (term_op -> SLASH power .)
    COLON           reduce using rule 85 (term_op -> SLASH power .)
    RSQB            reduce using rule 85 (term_op -> SLASH power .)
    RBRACE          reduce using rule 85 (term_op -> SLASH power .)


state 116

    (38) testlist -> test testlist_list COMMA .
    (40) testlist_list -> testlist_list COMMA . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    EQUAL           reduce using rule 38 (testlist -> test testlist_list COMMA .)
    NEWLINE         reduce using rule 38 (testlist -> test testlist_list COMMA .)
    SEMI            reduce using rule 38 (testlist -> test testlist_list COMMA .)
    COLON           reduce using rule 38 (testlist -> test testlist_list COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 155

state 117

    (39) testlist_list -> COMMA test .

    COMMA           reduce using rule 39 (testlist_list -> COMMA test .)
    EQUAL           reduce using rule 39 (testlist_list -> COMMA test .)
    NEWLINE         reduce using rule 39 (testlist_list -> COMMA test .)
    SEMI            reduce using rule 39 (testlist_list -> COMMA test .)
    COLON           reduce using rule 39 (testlist_list -> COMMA test .)


state 118

    (49) for_stmt -> FOR NAME IN . testlist COLON suite
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    atom_string_list               shift and go to state 5
    not_test                       shift and go to state 10
    test                           shift and go to state 19
    power                          shift and go to state 15
    testlist                       shift and go to state 156
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 119

    (33) equal_list -> EQUAL testlist .
    (34) equal_list -> EQUAL testlist . equal_list
    (33) equal_list -> . EQUAL testlist
    (34) equal_list -> . EQUAL testlist equal_list

    NEWLINE         reduce using rule 33 (equal_list -> EQUAL testlist .)
    SEMI            reduce using rule 33 (equal_list -> EQUAL testlist .)
    EQUAL           shift and go to state 69

    equal_list                     shift and go to state 157

state 120

    (57) or_test_list -> or_test_list OR . and_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    and_test                       shift and go to state 158
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4

state 121

    (56) or_test_list -> OR and_test .

    OR              reduce using rule 56 (or_test_list -> OR and_test .)
    COMMA           reduce using rule 56 (or_test_list -> OR and_test .)
    EQUAL           reduce using rule 56 (or_test_list -> OR and_test .)
    NEWLINE         reduce using rule 56 (or_test_list -> OR and_test .)
    SEMI            reduce using rule 56 (or_test_list -> OR and_test .)
    RPAR            reduce using rule 56 (or_test_list -> OR and_test .)
    COLON           reduce using rule 56 (or_test_list -> OR and_test .)
    RSQB            reduce using rule 56 (or_test_list -> OR and_test .)
    RBRACE          reduce using rule 56 (or_test_list -> OR and_test .)


state 122

    (93) atom -> LSQB listmaker RSQB .

    LPAR            reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    LSQB            reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    STAR            reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    SLASH           reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    PLUS            reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    MINUS           reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    LESS            reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    GREATER         reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    EQEQUAL         reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    GREATEREQUAL    reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    LESSEQUAL       reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    NOTEQUAL        reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    AND             reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    OR              reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    COMMA           reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    EQUAL           reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    NEWLINE         reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    SEMI            reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    RPAR            reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    COLON           reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    RSQB            reduce using rule 93 (atom -> LSQB listmaker RSQB .)
    RBRACE          reduce using rule 93 (atom -> LSQB listmaker RSQB .)


state 123

    (102) listmaker -> test COMMA .
    (105) listmaker_list -> COMMA . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RSQB            reduce using rule 102 (listmaker -> test COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 159

state 124

    (103) listmaker -> test listmaker_list .
    (104) listmaker -> test listmaker_list . COMMA
    (106) listmaker_list -> listmaker_list . COMMA test

    RSQB            reduce using rule 103 (listmaker -> test listmaker_list .)
    COMMA           shift and go to state 160


state 125

    (45) if_stmt -> IF test COLON . suite
    (46) if_stmt -> IF test COLON . suite else_stmt
    (5) suite -> . simple_stmt
    (6) suite -> . NEWLINE INDENT stmt_list DEDENT
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         shift and go to state 143
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    print_stmt                     shift and go to state 23
    test                           shift and go to state 19
    suite                          shift and go to state 161
    power                          shift and go to state 15
    simple_stmt                    shift and go to state 145
    testlist                       shift and go to state 24
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 126

    (77) arith_expr_list -> arith_expr_list arith_op .

    PLUS            reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    MINUS           reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    LESS            reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    GREATER         reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    EQEQUAL         reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    GREATEREQUAL    reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    LESSEQUAL       reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    NOTEQUAL        reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    AND             reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    OR              reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    COMMA           reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    EQUAL           reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    NEWLINE         reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    SEMI            reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    RPAR            reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    COLON           reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    RSQB            reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)
    RBRACE          reduce using rule 77 (arith_expr_list -> arith_expr_list arith_op .)


state 127

    (78) arith_op -> PLUS term .

    PLUS            reduce using rule 78 (arith_op -> PLUS term .)
    MINUS           reduce using rule 78 (arith_op -> PLUS term .)
    LESS            reduce using rule 78 (arith_op -> PLUS term .)
    GREATER         reduce using rule 78 (arith_op -> PLUS term .)
    EQEQUAL         reduce using rule 78 (arith_op -> PLUS term .)
    GREATEREQUAL    reduce using rule 78 (arith_op -> PLUS term .)
    LESSEQUAL       reduce using rule 78 (arith_op -> PLUS term .)
    NOTEQUAL        reduce using rule 78 (arith_op -> PLUS term .)
    AND             reduce using rule 78 (arith_op -> PLUS term .)
    OR              reduce using rule 78 (arith_op -> PLUS term .)
    COMMA           reduce using rule 78 (arith_op -> PLUS term .)
    EQUAL           reduce using rule 78 (arith_op -> PLUS term .)
    NEWLINE         reduce using rule 78 (arith_op -> PLUS term .)
    SEMI            reduce using rule 78 (arith_op -> PLUS term .)
    RPAR            reduce using rule 78 (arith_op -> PLUS term .)
    COLON           reduce using rule 78 (arith_op -> PLUS term .)
    RSQB            reduce using rule 78 (arith_op -> PLUS term .)
    RBRACE          reduce using rule 78 (arith_op -> PLUS term .)


state 128

    (79) arith_op -> MINUS term .

    PLUS            reduce using rule 79 (arith_op -> MINUS term .)
    MINUS           reduce using rule 79 (arith_op -> MINUS term .)
    LESS            reduce using rule 79 (arith_op -> MINUS term .)
    GREATER         reduce using rule 79 (arith_op -> MINUS term .)
    EQEQUAL         reduce using rule 79 (arith_op -> MINUS term .)
    GREATEREQUAL    reduce using rule 79 (arith_op -> MINUS term .)
    LESSEQUAL       reduce using rule 79 (arith_op -> MINUS term .)
    NOTEQUAL        reduce using rule 79 (arith_op -> MINUS term .)
    AND             reduce using rule 79 (arith_op -> MINUS term .)
    OR              reduce using rule 79 (arith_op -> MINUS term .)
    COMMA           reduce using rule 79 (arith_op -> MINUS term .)
    EQUAL           reduce using rule 79 (arith_op -> MINUS term .)
    NEWLINE         reduce using rule 79 (arith_op -> MINUS term .)
    SEMI            reduce using rule 79 (arith_op -> MINUS term .)
    RPAR            reduce using rule 79 (arith_op -> MINUS term .)
    COLON           reduce using rule 79 (arith_op -> MINUS term .)
    RSQB            reduce using rule 79 (arith_op -> MINUS term .)
    RBRACE          reduce using rule 79 (arith_op -> MINUS term .)


state 129

    (95) atom -> LBRACE dictorsetmaker RBRACE .

    LPAR            reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    LSQB            reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    STAR            reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    SLASH           reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    PLUS            reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    MINUS           reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    LESS            reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    GREATER         reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    EQEQUAL         reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    GREATEREQUAL    reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    LESSEQUAL       reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    NOTEQUAL        reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    AND             reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    OR              reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    COMMA           reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    EQUAL           reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    NEWLINE         reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    SEMI            reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    RPAR            reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    COLON           reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    RSQB            reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)
    RBRACE          reduce using rule 95 (atom -> LBRACE dictorsetmaker RBRACE .)


state 130

    (123) dictorsetmaker -> test COLON . test
    (124) dictorsetmaker -> test COLON . test COMMA
    (125) dictorsetmaker -> test COLON . test dosm_colon_list
    (126) dictorsetmaker -> test COLON . test dosm_colon_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    and_test                       shift and go to state 28
    or_test                        shift and go to state 38
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 162

state 131

    (66) comparison_list -> comp_op arith_expr .

    LESS            reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    GREATER         reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    EQEQUAL         reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    GREATEREQUAL    reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    LESSEQUAL       reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    NOTEQUAL        reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    AND             reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    OR              reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    COMMA           reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    EQUAL           reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    NEWLINE         reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    SEMI            reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    RPAR            reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    COLON           reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    RSQB            reduce using rule 66 (comparison_list -> comp_op arith_expr .)
    RBRACE          reduce using rule 66 (comparison_list -> comp_op arith_expr .)


state 132

    (67) comparison_list -> comparison_list comp_op . arith_expr
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    arith_expr                     shift and go to state 163
    power                          shift and go to state 15
    atom_string_list               shift and go to state 5
    term                           shift and go to state 34
    atom                           shift and go to state 4

state 133

    (110) testlist_comp -> test testlist_comp_list COMMA .
    (112) testlist_comp_list -> testlist_comp_list COMMA . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RPAR            reduce using rule 110 (testlist_comp -> test testlist_comp_list COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 164

state 134

    (111) testlist_comp_list -> COMMA test .

    COMMA           reduce using rule 111 (testlist_comp_list -> COMMA test .)
    RPAR            reduce using rule 111 (testlist_comp_list -> COMMA test .)


state 135

    (17) small_stmt_list_list -> small_stmt_list_list SEMI small_stmt .

    SEMI            reduce using rule 17 (small_stmt_list_list -> small_stmt_list_list SEMI small_stmt .)
    NEWLINE         reduce using rule 17 (small_stmt_list_list -> small_stmt_list_list SEMI small_stmt .)


state 136

    (114) trailer -> LPAR arglist RPAR .

    LPAR            reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    LSQB            reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    STAR            reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    SLASH           reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    PLUS            reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    MINUS           reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    LESS            reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    GREATER         reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    EQEQUAL         reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    GREATEREQUAL    reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    LESSEQUAL       reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    NOTEQUAL        reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    AND             reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    OR              reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    COMMA           reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    EQUAL           reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    NEWLINE         reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    SEMI            reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    RPAR            reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    COLON           reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    RSQB            reduce using rule 114 (trailer -> LPAR arglist RPAR .)
    RBRACE          reduce using rule 114 (trailer -> LPAR arglist RPAR .)


state 137

    (131) arglist -> arglist_list argument .
    (132) arglist -> arglist_list argument . COMMA
    (134) arglist_list -> arglist_list argument . COMMA

    RPAR            reduce using rule 131 (arglist -> arglist_list argument .)
    COMMA           shift and go to state 165


state 138

    (136) argument -> test EQUAL . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 166

state 139

    (130) arglist -> argument COMMA .
    (133) arglist_list -> argument COMMA .

    RPAR            reduce using rule 130 (arglist -> argument COMMA .)
    NOT             reduce using rule 133 (arglist_list -> argument COMMA .)
    LPAR            reduce using rule 133 (arglist_list -> argument COMMA .)
    LSQB            reduce using rule 133 (arglist_list -> argument COMMA .)
    LBRACE          reduce using rule 133 (arglist_list -> argument COMMA .)
    NAME            reduce using rule 133 (arglist_list -> argument COMMA .)
    NUMBER          reduce using rule 133 (arglist_list -> argument COMMA .)
    STRING          reduce using rule 133 (arglist_list -> argument COMMA .)


state 140

    (118) subscriptlist -> subscript subscriptlist_list .
    (119) subscriptlist -> subscript subscriptlist_list . COMMA
    (121) subscriptlist_list -> subscriptlist_list . COMMA subscript

    RSQB            reduce using rule 118 (subscriptlist -> subscript subscriptlist_list .)
    COMMA           shift and go to state 167


state 141

    (117) subscriptlist -> subscript COMMA .
    (120) subscriptlist_list -> COMMA . subscript
    (122) subscript -> . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RSQB            reduce using rule 117 (subscriptlist -> subscript COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 103
    subscript                      shift and go to state 168

state 142

    (115) trailer -> LSQB subscriptlist RSQB .

    LPAR            reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    LSQB            reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    STAR            reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    SLASH           reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    PLUS            reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    MINUS           reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    LESS            reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    GREATER         reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    EQEQUAL         reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    GREATEREQUAL    reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    LESSEQUAL       reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    NOTEQUAL        reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    AND             reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    OR              reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    COMMA           reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    EQUAL           reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    NEWLINE         reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    SEMI            reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    RPAR            reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    COLON           reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    RSQB            reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)
    RBRACE          reduce using rule 115 (trailer -> LSQB subscriptlist RSQB .)


state 143

    (6) suite -> NEWLINE . INDENT stmt_list DEDENT

    INDENT          shift and go to state 169


state 144

    (48) while_stmt -> WHILE test COLON suite .

    ENDMARKER       reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    IF              reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    WHILE           reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    FOR             reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    DEF             reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    PRINT           reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    RETURN          reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    NOT             reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    LPAR            reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    LSQB            reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    LBRACE          reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    NAME            reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    NUMBER          reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    STRING          reduce using rule 48 (while_stmt -> WHILE test COLON suite .)
    DEDENT          reduce using rule 48 (while_stmt -> WHILE test COLON suite .)


state 145

    (5) suite -> simple_stmt .

    ENDMARKER       reduce using rule 5 (suite -> simple_stmt .)
    IF              reduce using rule 5 (suite -> simple_stmt .)
    WHILE           reduce using rule 5 (suite -> simple_stmt .)
    FOR             reduce using rule 5 (suite -> simple_stmt .)
    DEF             reduce using rule 5 (suite -> simple_stmt .)
    PRINT           reduce using rule 5 (suite -> simple_stmt .)
    RETURN          reduce using rule 5 (suite -> simple_stmt .)
    NOT             reduce using rule 5 (suite -> simple_stmt .)
    LPAR            reduce using rule 5 (suite -> simple_stmt .)
    LSQB            reduce using rule 5 (suite -> simple_stmt .)
    LBRACE          reduce using rule 5 (suite -> simple_stmt .)
    NAME            reduce using rule 5 (suite -> simple_stmt .)
    NUMBER          reduce using rule 5 (suite -> simple_stmt .)
    STRING          reduce using rule 5 (suite -> simple_stmt .)
    DEDENT          reduce using rule 5 (suite -> simple_stmt .)
    ELSE            reduce using rule 5 (suite -> simple_stmt .)


state 146

    (61) and_test_list -> and_test_list AND not_test .

    AND             reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    OR              reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    COMMA           reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    EQUAL           reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    NEWLINE         reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    SEMI            reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    RPAR            reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    COLON           reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    RSQB            reduce using rule 61 (and_test_list -> and_test_list AND not_test .)
    RBRACE          reduce using rule 61 (and_test_list -> and_test_list AND not_test .)


state 147

    (27) print_list_list -> COMMA test .

    COMMA           reduce using rule 27 (print_list_list -> COMMA test .)
    NEWLINE         reduce using rule 27 (print_list_list -> COMMA test .)
    SEMI            reduce using rule 27 (print_list_list -> COMMA test .)


state 148

    (26) print_list -> test print_list_list COMMA .
    (28) print_list_list -> print_list_list COMMA . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         reduce using rule 26 (print_list -> test print_list_list COMMA .)
    SEMI            reduce using rule 26 (print_list -> test print_list_list COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 170

state 149

    (150) fpdef -> LPAR . fplist RPAR
    (151) fplist -> . fpdef
    (152) fplist -> . fpdef COMMA
    (153) fplist -> . fpdef fplist_list
    (154) fplist -> . fpdef fplist_list COMMA
    (149) fpdef -> . NAME
    (150) fpdef -> . LPAR fplist RPAR

    NAME            shift and go to state 150
    LPAR            shift and go to state 149

    fplist                         shift and go to state 172
    fpdef                          shift and go to state 171

state 150

    (149) fpdef -> NAME .

    COMMA           reduce using rule 149 (fpdef -> NAME .)
    RPAR            reduce using rule 149 (fpdef -> NAME .)
    EQUAL           reduce using rule 149 (fpdef -> NAME .)


state 151

    (137) varargslist -> fpdef .
    (138) varargslist -> fpdef . COMMA
    (139) varargslist -> fpdef . varargslist_list
    (140) varargslist -> fpdef . varargslist_list COMMA
    (141) varargslist -> fpdef . EQUAL test
    (142) varargslist -> fpdef . EQUAL test COMMA
    (143) varargslist -> fpdef . EQUAL test varargslist_list
    (144) varargslist -> fpdef . EQUAL test varargslist_list COMMA
    (145) varargslist_list -> . COMMA fpdef
    (146) varargslist_list -> . COMMA fpdef EQUAL test
    (147) varargslist_list -> . varargslist_list COMMA fpdef
    (148) varargslist_list -> . varargslist_list COMMA fpdef EQUAL test

    RPAR            reduce using rule 137 (varargslist -> fpdef .)
    COMMA           shift and go to state 174
    EQUAL           shift and go to state 175

    varargslist_list               shift and go to state 173

state 152

    (51) parameters -> LPAR RPAR .

    COLON           reduce using rule 51 (parameters -> LPAR RPAR .)


state 153

    (52) parameters -> LPAR varargslist . RPAR

    RPAR            shift and go to state 176


state 154

    (50) funcdef -> DEF NAME parameters COLON . suite
    (5) suite -> . simple_stmt
    (6) suite -> . NEWLINE INDENT stmt_list DEDENT
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         shift and go to state 143
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    print_stmt                     shift and go to state 23
    test                           shift and go to state 19
    suite                          shift and go to state 177
    power                          shift and go to state 15
    simple_stmt                    shift and go to state 145
    testlist                       shift and go to state 24
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 155

    (40) testlist_list -> testlist_list COMMA test .

    COMMA           reduce using rule 40 (testlist_list -> testlist_list COMMA test .)
    EQUAL           reduce using rule 40 (testlist_list -> testlist_list COMMA test .)
    NEWLINE         reduce using rule 40 (testlist_list -> testlist_list COMMA test .)
    SEMI            reduce using rule 40 (testlist_list -> testlist_list COMMA test .)
    COLON           reduce using rule 40 (testlist_list -> testlist_list COMMA test .)


state 156

    (49) for_stmt -> FOR NAME IN testlist . COLON suite

    COLON           shift and go to state 178


state 157

    (34) equal_list -> EQUAL testlist equal_list .

    NEWLINE         reduce using rule 34 (equal_list -> EQUAL testlist equal_list .)
    SEMI            reduce using rule 34 (equal_list -> EQUAL testlist equal_list .)


state 158

    (57) or_test_list -> or_test_list OR and_test .

    OR              reduce using rule 57 (or_test_list -> or_test_list OR and_test .)
    COMMA           reduce using rule 57 (or_test_list -> or_test_list OR and_test .)
    EQUAL           reduce using rule 57 (or_test_list -> or_test_list OR and_test .)
    NEWLINE         reduce using rule 57 (or_test_list -> or_test_list OR and_test .)
    SEMI            reduce using rule 57 (or_test_list -> or_test_list OR and_test .)
    RPAR            reduce using rule 57 (or_test_list -> or_test_list OR and_test .)
    COLON           reduce using rule 57 (or_test_list -> or_test_list OR and_test .)
    RSQB            reduce using rule 57 (or_test_list -> or_test_list OR and_test .)
    RBRACE          reduce using rule 57 (or_test_list -> or_test_list OR and_test .)


state 159

    (105) listmaker_list -> COMMA test .

    COMMA           reduce using rule 105 (listmaker_list -> COMMA test .)
    RSQB            reduce using rule 105 (listmaker_list -> COMMA test .)


state 160

    (104) listmaker -> test listmaker_list COMMA .
    (106) listmaker_list -> listmaker_list COMMA . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RSQB            reduce using rule 104 (listmaker -> test listmaker_list COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 179

state 161

    (45) if_stmt -> IF test COLON suite .
    (46) if_stmt -> IF test COLON suite . else_stmt
    (47) else_stmt -> . ELSE COLON suite

    ENDMARKER       reduce using rule 45 (if_stmt -> IF test COLON suite .)
    IF              reduce using rule 45 (if_stmt -> IF test COLON suite .)
    WHILE           reduce using rule 45 (if_stmt -> IF test COLON suite .)
    FOR             reduce using rule 45 (if_stmt -> IF test COLON suite .)
    DEF             reduce using rule 45 (if_stmt -> IF test COLON suite .)
    PRINT           reduce using rule 45 (if_stmt -> IF test COLON suite .)
    RETURN          reduce using rule 45 (if_stmt -> IF test COLON suite .)
    NOT             reduce using rule 45 (if_stmt -> IF test COLON suite .)
    LPAR            reduce using rule 45 (if_stmt -> IF test COLON suite .)
    LSQB            reduce using rule 45 (if_stmt -> IF test COLON suite .)
    LBRACE          reduce using rule 45 (if_stmt -> IF test COLON suite .)
    NAME            reduce using rule 45 (if_stmt -> IF test COLON suite .)
    NUMBER          reduce using rule 45 (if_stmt -> IF test COLON suite .)
    STRING          reduce using rule 45 (if_stmt -> IF test COLON suite .)
    DEDENT          reduce using rule 45 (if_stmt -> IF test COLON suite .)
    ELSE            shift and go to state 180

    else_stmt                      shift and go to state 181

state 162

    (123) dictorsetmaker -> test COLON test .
    (124) dictorsetmaker -> test COLON test . COMMA
    (125) dictorsetmaker -> test COLON test . dosm_colon_list
    (126) dictorsetmaker -> test COLON test . dosm_colon_list COMMA
    (127) dosm_colon_list -> . COMMA test COLON test
    (128) dosm_colon_list -> . dosm_colon_list COMMA test COLON test

    RBRACE          reduce using rule 123 (dictorsetmaker -> test COLON test .)
    COMMA           shift and go to state 182

    dosm_colon_list                shift and go to state 183

state 163

    (67) comparison_list -> comparison_list comp_op arith_expr .

    LESS            reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    GREATER         reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    EQEQUAL         reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    GREATEREQUAL    reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    LESSEQUAL       reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    NOTEQUAL        reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    AND             reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    OR              reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    COMMA           reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    EQUAL           reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    NEWLINE         reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    SEMI            reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    RPAR            reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    COLON           reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    RSQB            reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)
    RBRACE          reduce using rule 67 (comparison_list -> comparison_list comp_op arith_expr .)


state 164

    (112) testlist_comp_list -> testlist_comp_list COMMA test .

    COMMA           reduce using rule 112 (testlist_comp_list -> testlist_comp_list COMMA test .)
    RPAR            reduce using rule 112 (testlist_comp_list -> testlist_comp_list COMMA test .)


state 165

    (132) arglist -> arglist_list argument COMMA .
    (134) arglist_list -> arglist_list argument COMMA .

    RPAR            reduce using rule 132 (arglist -> arglist_list argument COMMA .)
    NOT             reduce using rule 134 (arglist_list -> arglist_list argument COMMA .)
    LPAR            reduce using rule 134 (arglist_list -> arglist_list argument COMMA .)
    LSQB            reduce using rule 134 (arglist_list -> arglist_list argument COMMA .)
    LBRACE          reduce using rule 134 (arglist_list -> arglist_list argument COMMA .)
    NAME            reduce using rule 134 (arglist_list -> arglist_list argument COMMA .)
    NUMBER          reduce using rule 134 (arglist_list -> arglist_list argument COMMA .)
    STRING          reduce using rule 134 (arglist_list -> arglist_list argument COMMA .)


state 166

    (136) argument -> test EQUAL test .

    COMMA           reduce using rule 136 (argument -> test EQUAL test .)
    RPAR            reduce using rule 136 (argument -> test EQUAL test .)


state 167

    (119) subscriptlist -> subscript subscriptlist_list COMMA .
    (121) subscriptlist_list -> subscriptlist_list COMMA . subscript
    (122) subscript -> . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RSQB            reduce using rule 119 (subscriptlist -> subscript subscriptlist_list COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 103
    subscript                      shift and go to state 184

state 168

    (120) subscriptlist_list -> COMMA subscript .

    COMMA           reduce using rule 120 (subscriptlist_list -> COMMA subscript .)
    RSQB            reduce using rule 120 (subscriptlist_list -> COMMA subscript .)


state 169

    (6) suite -> NEWLINE INDENT . stmt_list DEDENT
    (7) stmt_list -> . stmt stmt_list
    (8) stmt_list -> . stmt
    (9) stmt -> . simple_stmt
    (10) stmt -> . compound_stmt
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (41) compound_stmt -> . if_stmt
    (42) compound_stmt -> . while_stmt
    (43) compound_stmt -> . for_stmt
    (44) compound_stmt -> . funcdef
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (45) if_stmt -> . IF test COLON suite
    (46) if_stmt -> . IF test COLON suite else_stmt
    (48) while_stmt -> . WHILE test COLON suite
    (49) for_stmt -> . FOR NAME IN testlist COLON suite
    (50) funcdef -> . DEF NAME parameters COLON suite
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    IF              shift and go to state 32
    WHILE           shift and go to state 8
    FOR             shift and go to state 22
    DEF             shift and go to state 13
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    print_stmt                     shift and go to state 23
    test                           shift and go to state 19
    compound_stmt                  shift and go to state 21
    power                          shift and go to state 15
    simple_stmt                    shift and go to state 17
    testlist                       shift and go to state 24
    stmt                           shift and go to state 185
    for_stmt                       shift and go to state 27
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    funcdef                        shift and go to state 29
    expr_stmt                      shift and go to state 31
    stmt_list                      shift and go to state 186
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    if_stmt                        shift and go to state 36
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38
    while_stmt                     shift and go to state 39

state 170

    (28) print_list_list -> print_list_list COMMA test .

    COMMA           reduce using rule 28 (print_list_list -> print_list_list COMMA test .)
    NEWLINE         reduce using rule 28 (print_list_list -> print_list_list COMMA test .)
    SEMI            reduce using rule 28 (print_list_list -> print_list_list COMMA test .)


state 171

    (151) fplist -> fpdef .
    (152) fplist -> fpdef . COMMA
    (153) fplist -> fpdef . fplist_list
    (154) fplist -> fpdef . fplist_list COMMA
    (155) fplist_list -> . COMMA fpdef
    (156) fplist_list -> . fplist_list COMMA fpdef

    RPAR            reduce using rule 151 (fplist -> fpdef .)
    COMMA           shift and go to state 187

    fplist_list                    shift and go to state 188

state 172

    (150) fpdef -> LPAR fplist . RPAR

    RPAR            shift and go to state 189


state 173

    (139) varargslist -> fpdef varargslist_list .
    (140) varargslist -> fpdef varargslist_list . COMMA
    (147) varargslist_list -> varargslist_list . COMMA fpdef
    (148) varargslist_list -> varargslist_list . COMMA fpdef EQUAL test

    RPAR            reduce using rule 139 (varargslist -> fpdef varargslist_list .)
    COMMA           shift and go to state 190


state 174

    (138) varargslist -> fpdef COMMA .
    (145) varargslist_list -> COMMA . fpdef
    (146) varargslist_list -> COMMA . fpdef EQUAL test
    (149) fpdef -> . NAME
    (150) fpdef -> . LPAR fplist RPAR

    RPAR            reduce using rule 138 (varargslist -> fpdef COMMA .)
    NAME            shift and go to state 150
    LPAR            shift and go to state 149

    fpdef                          shift and go to state 191

state 175

    (141) varargslist -> fpdef EQUAL . test
    (142) varargslist -> fpdef EQUAL . test COMMA
    (143) varargslist -> fpdef EQUAL . test varargslist_list
    (144) varargslist -> fpdef EQUAL . test varargslist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 192

state 176

    (52) parameters -> LPAR varargslist RPAR .

    COLON           reduce using rule 52 (parameters -> LPAR varargslist RPAR .)


state 177

    (50) funcdef -> DEF NAME parameters COLON suite .

    ENDMARKER       reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    WHILE           reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    FOR             reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    PRINT           reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    NOT             reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    LPAR            reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    LSQB            reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    LBRACE          reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)
    DEDENT          reduce using rule 50 (funcdef -> DEF NAME parameters COLON suite .)


state 178

    (49) for_stmt -> FOR NAME IN testlist COLON . suite
    (5) suite -> . simple_stmt
    (6) suite -> . NEWLINE INDENT stmt_list DEDENT
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         shift and go to state 143
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    print_stmt                     shift and go to state 23
    test                           shift and go to state 19
    suite                          shift and go to state 193
    power                          shift and go to state 15
    simple_stmt                    shift and go to state 145
    testlist                       shift and go to state 24
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 179

    (106) listmaker_list -> listmaker_list COMMA test .

    COMMA           reduce using rule 106 (listmaker_list -> listmaker_list COMMA test .)
    RSQB            reduce using rule 106 (listmaker_list -> listmaker_list COMMA test .)


state 180

    (47) else_stmt -> ELSE . COLON suite

    COLON           shift and go to state 194


state 181

    (46) if_stmt -> IF test COLON suite else_stmt .

    ENDMARKER       reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    IF              reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    WHILE           reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    FOR             reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    DEF             reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    PRINT           reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    RETURN          reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    NOT             reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    LPAR            reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    LSQB            reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    LBRACE          reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    NAME            reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    NUMBER          reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    STRING          reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)
    DEDENT          reduce using rule 46 (if_stmt -> IF test COLON suite else_stmt .)


state 182

    (124) dictorsetmaker -> test COLON test COMMA .
    (127) dosm_colon_list -> COMMA . test COLON test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RBRACE          reduce using rule 124 (dictorsetmaker -> test COLON test COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 195

state 183

    (125) dictorsetmaker -> test COLON test dosm_colon_list .
    (126) dictorsetmaker -> test COLON test dosm_colon_list . COMMA
    (128) dosm_colon_list -> dosm_colon_list . COMMA test COLON test

    RBRACE          reduce using rule 125 (dictorsetmaker -> test COLON test dosm_colon_list .)
    COMMA           shift and go to state 196


state 184

    (121) subscriptlist_list -> subscriptlist_list COMMA subscript .

    COMMA           reduce using rule 121 (subscriptlist_list -> subscriptlist_list COMMA subscript .)
    RSQB            reduce using rule 121 (subscriptlist_list -> subscriptlist_list COMMA subscript .)


state 185

    (7) stmt_list -> stmt . stmt_list
    (8) stmt_list -> stmt .
    (7) stmt_list -> . stmt stmt_list
    (8) stmt_list -> . stmt
    (9) stmt -> . simple_stmt
    (10) stmt -> . compound_stmt
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (41) compound_stmt -> . if_stmt
    (42) compound_stmt -> . while_stmt
    (43) compound_stmt -> . for_stmt
    (44) compound_stmt -> . funcdef
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (45) if_stmt -> . IF test COLON suite
    (46) if_stmt -> . IF test COLON suite else_stmt
    (48) while_stmt -> . WHILE test COLON suite
    (49) for_stmt -> . FOR NAME IN testlist COLON suite
    (50) funcdef -> . DEF NAME parameters COLON suite
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    DEDENT          reduce using rule 8 (stmt_list -> stmt .)
    IF              shift and go to state 32
    WHILE           shift and go to state 8
    FOR             shift and go to state 22
    DEF             shift and go to state 13
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    print_stmt                     shift and go to state 23
    test                           shift and go to state 19
    compound_stmt                  shift and go to state 21
    power                          shift and go to state 15
    simple_stmt                    shift and go to state 17
    testlist                       shift and go to state 24
    stmt                           shift and go to state 185
    for_stmt                       shift and go to state 27
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    funcdef                        shift and go to state 29
    expr_stmt                      shift and go to state 31
    stmt_list                      shift and go to state 197
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    if_stmt                        shift and go to state 36
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38
    while_stmt                     shift and go to state 39

state 186

    (6) suite -> NEWLINE INDENT stmt_list . DEDENT

    DEDENT          shift and go to state 198


state 187

    (152) fplist -> fpdef COMMA .
    (155) fplist_list -> COMMA . fpdef
    (149) fpdef -> . NAME
    (150) fpdef -> . LPAR fplist RPAR

    RPAR            reduce using rule 152 (fplist -> fpdef COMMA .)
    NAME            shift and go to state 150
    LPAR            shift and go to state 149

    fpdef                          shift and go to state 199

state 188

    (153) fplist -> fpdef fplist_list .
    (154) fplist -> fpdef fplist_list . COMMA
    (156) fplist_list -> fplist_list . COMMA fpdef

    RPAR            reduce using rule 153 (fplist -> fpdef fplist_list .)
    COMMA           shift and go to state 200


state 189

    (150) fpdef -> LPAR fplist RPAR .

    COMMA           reduce using rule 150 (fpdef -> LPAR fplist RPAR .)
    RPAR            reduce using rule 150 (fpdef -> LPAR fplist RPAR .)
    EQUAL           reduce using rule 150 (fpdef -> LPAR fplist RPAR .)


state 190

    (140) varargslist -> fpdef varargslist_list COMMA .
    (147) varargslist_list -> varargslist_list COMMA . fpdef
    (148) varargslist_list -> varargslist_list COMMA . fpdef EQUAL test
    (149) fpdef -> . NAME
    (150) fpdef -> . LPAR fplist RPAR

    RPAR            reduce using rule 140 (varargslist -> fpdef varargslist_list COMMA .)
    NAME            shift and go to state 150
    LPAR            shift and go to state 149

    fpdef                          shift and go to state 201

state 191

    (145) varargslist_list -> COMMA fpdef .
    (146) varargslist_list -> COMMA fpdef . EQUAL test

    COMMA           reduce using rule 145 (varargslist_list -> COMMA fpdef .)
    RPAR            reduce using rule 145 (varargslist_list -> COMMA fpdef .)
    EQUAL           shift and go to state 202


state 192

    (141) varargslist -> fpdef EQUAL test .
    (142) varargslist -> fpdef EQUAL test . COMMA
    (143) varargslist -> fpdef EQUAL test . varargslist_list
    (144) varargslist -> fpdef EQUAL test . varargslist_list COMMA
    (145) varargslist_list -> . COMMA fpdef
    (146) varargslist_list -> . COMMA fpdef EQUAL test
    (147) varargslist_list -> . varargslist_list COMMA fpdef
    (148) varargslist_list -> . varargslist_list COMMA fpdef EQUAL test

    RPAR            reduce using rule 141 (varargslist -> fpdef EQUAL test .)
    COMMA           shift and go to state 204

    varargslist_list               shift and go to state 203

state 193

    (49) for_stmt -> FOR NAME IN testlist COLON suite .

    IF              reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    WHILE           reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    FOR             reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    DEF             reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    PRINT           reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    RETURN          reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    NOT             reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    LPAR            reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    LSQB            reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    LBRACE          reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    NAME            reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    NUMBER          reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    STRING          reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    DEDENT          reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)
    ENDMARKER       reduce using rule 49 (for_stmt -> FOR NAME IN testlist COLON suite .)


state 194

    (47) else_stmt -> ELSE COLON . suite
    (5) suite -> . simple_stmt
    (6) suite -> . NEWLINE INDENT stmt_list DEDENT
    (11) simple_stmt -> . small_stmt NEWLINE
    (12) simple_stmt -> . small_stmt_list NEWLINE
    (18) small_stmt -> . expr_stmt
    (19) small_stmt -> . print_stmt
    (20) small_stmt -> . return_stmt
    (13) small_stmt_list -> . small_stmt SEMI
    (14) small_stmt_list -> . small_stmt small_stmt_list_list
    (15) small_stmt_list -> . small_stmt small_stmt_list_list SEMI
    (31) expr_stmt -> . testlist
    (32) expr_stmt -> . testlist equal_list
    (21) print_stmt -> . PRINT
    (22) print_stmt -> . PRINT test
    (23) print_stmt -> . PRINT print_list
    (29) return_stmt -> . RETURN
    (30) return_stmt -> . RETURN testlist
    (35) testlist -> . test
    (36) testlist -> . test COMMA
    (37) testlist -> . test testlist_list
    (38) testlist -> . test testlist_list COMMA
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NEWLINE         shift and go to state 143
    PRINT           shift and go to state 11
    RETURN          shift and go to state 12
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    small_stmt                     shift and go to state 3
    atom_string_list               shift and go to state 5
    small_stmt_list                shift and go to state 7
    return_stmt                    shift and go to state 9
    not_test                       shift and go to state 10
    print_stmt                     shift and go to state 23
    test                           shift and go to state 19
    suite                          shift and go to state 205
    power                          shift and go to state 15
    simple_stmt                    shift and go to state 145
    testlist                       shift and go to state 24
    and_test                       shift and go to state 28
    atom                           shift and go to state 4
    expr_stmt                      shift and go to state 31
    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    or_test                        shift and go to state 38

state 195

    (127) dosm_colon_list -> COMMA test . COLON test

    COLON           shift and go to state 206


state 196

    (126) dictorsetmaker -> test COLON test dosm_colon_list COMMA .
    (128) dosm_colon_list -> dosm_colon_list COMMA . test COLON test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    RBRACE          reduce using rule 126 (dictorsetmaker -> test COLON test dosm_colon_list COMMA .)
    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    and_test                       shift and go to state 28
    or_test                        shift and go to state 38
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 207

state 197

    (7) stmt_list -> stmt stmt_list .

    DEDENT          reduce using rule 7 (stmt_list -> stmt stmt_list .)


state 198

    (6) suite -> NEWLINE INDENT stmt_list DEDENT .

    ENDMARKER       reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    IF              reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    WHILE           reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    FOR             reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    DEF             reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    PRINT           reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    RETURN          reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    NOT             reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    LPAR            reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    LSQB            reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    LBRACE          reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    NAME            reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    NUMBER          reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    STRING          reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    DEDENT          reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)
    ELSE            reduce using rule 6 (suite -> NEWLINE INDENT stmt_list DEDENT .)


state 199

    (155) fplist_list -> COMMA fpdef .

    COMMA           reduce using rule 155 (fplist_list -> COMMA fpdef .)
    RPAR            reduce using rule 155 (fplist_list -> COMMA fpdef .)


state 200

    (154) fplist -> fpdef fplist_list COMMA .
    (156) fplist_list -> fplist_list COMMA . fpdef
    (149) fpdef -> . NAME
    (150) fpdef -> . LPAR fplist RPAR

    RPAR            reduce using rule 154 (fplist -> fpdef fplist_list COMMA .)
    NAME            shift and go to state 150
    LPAR            shift and go to state 149

    fpdef                          shift and go to state 208

state 201

    (147) varargslist_list -> varargslist_list COMMA fpdef .
    (148) varargslist_list -> varargslist_list COMMA fpdef . EQUAL test

    COMMA           reduce using rule 147 (varargslist_list -> varargslist_list COMMA fpdef .)
    RPAR            reduce using rule 147 (varargslist_list -> varargslist_list COMMA fpdef .)
    EQUAL           shift and go to state 209


state 202

    (146) varargslist_list -> COMMA fpdef EQUAL . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 210

state 203

    (143) varargslist -> fpdef EQUAL test varargslist_list .
    (144) varargslist -> fpdef EQUAL test varargslist_list . COMMA
    (147) varargslist_list -> varargslist_list . COMMA fpdef
    (148) varargslist_list -> varargslist_list . COMMA fpdef EQUAL test

    RPAR            reduce using rule 143 (varargslist -> fpdef EQUAL test varargslist_list .)
    COMMA           shift and go to state 211


state 204

    (142) varargslist -> fpdef EQUAL test COMMA .
    (145) varargslist_list -> COMMA . fpdef
    (146) varargslist_list -> COMMA . fpdef EQUAL test
    (149) fpdef -> . NAME
    (150) fpdef -> . LPAR fplist RPAR

    RPAR            reduce using rule 142 (varargslist -> fpdef EQUAL test COMMA .)
    NAME            shift and go to state 150
    LPAR            shift and go to state 149

    fpdef                          shift and go to state 191

state 205

    (47) else_stmt -> ELSE COLON suite .

    ENDMARKER       reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    IF              reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    WHILE           reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    FOR             reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    DEF             reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    PRINT           reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    RETURN          reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    NOT             reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    LPAR            reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    LSQB            reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    LBRACE          reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    NAME            reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    NUMBER          reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    STRING          reduce using rule 47 (else_stmt -> ELSE COLON suite .)
    DEDENT          reduce using rule 47 (else_stmt -> ELSE COLON suite .)


state 206

    (127) dosm_colon_list -> COMMA test COLON . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 212

state 207

    (128) dosm_colon_list -> dosm_colon_list COMMA test . COLON test

    COLON           shift and go to state 213


state 208

    (156) fplist_list -> fplist_list COMMA fpdef .

    COMMA           reduce using rule 156 (fplist_list -> fplist_list COMMA fpdef .)
    RPAR            reduce using rule 156 (fplist_list -> fplist_list COMMA fpdef .)


state 209

    (148) varargslist_list -> varargslist_list COMMA fpdef EQUAL . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    or_test                        shift and go to state 38
    and_test                       shift and go to state 28
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 214

state 210

    (146) varargslist_list -> COMMA fpdef EQUAL test .

    COMMA           reduce using rule 146 (varargslist_list -> COMMA fpdef EQUAL test .)
    RPAR            reduce using rule 146 (varargslist_list -> COMMA fpdef EQUAL test .)


state 211

    (144) varargslist -> fpdef EQUAL test varargslist_list COMMA .
    (147) varargslist_list -> varargslist_list COMMA . fpdef
    (148) varargslist_list -> varargslist_list COMMA . fpdef EQUAL test
    (149) fpdef -> . NAME
    (150) fpdef -> . LPAR fplist RPAR

    RPAR            reduce using rule 144 (varargslist -> fpdef EQUAL test varargslist_list COMMA .)
    NAME            shift and go to state 150
    LPAR            shift and go to state 149

    fpdef                          shift and go to state 201

state 212

    (127) dosm_colon_list -> COMMA test COLON test .

    COMMA           reduce using rule 127 (dosm_colon_list -> COMMA test COLON test .)
    RBRACE          reduce using rule 127 (dosm_colon_list -> COMMA test COLON test .)


state 213

    (128) dosm_colon_list -> dosm_colon_list COMMA test COLON . test
    (53) test -> . or_test
    (54) or_test -> . and_test
    (55) or_test -> . and_test or_test_list
    (58) and_test -> . not_test
    (59) and_test -> . not_test and_test_list
    (62) not_test -> . comparison
    (63) not_test -> . NOT not_test
    (64) comparison -> . arith_expr
    (65) comparison -> . arith_expr comparison_list
    (74) arith_expr -> . term
    (75) arith_expr -> . term arith_expr_list
    (80) term -> . power
    (81) term -> . power term_list
    (86) power -> . atom
    (87) power -> . atom power_list
    (90) atom -> . LPAR RPAR
    (91) atom -> . LPAR testlist_comp RPAR
    (92) atom -> . LSQB RSQB
    (93) atom -> . LSQB listmaker RSQB
    (94) atom -> . LBRACE RBRACE
    (95) atom -> . LBRACE dictorsetmaker RBRACE
    (96) atom -> . NAME
    (97) atom -> . NUMBER
    (98) atom -> . atom_string_list
    (99) atom_string_list -> . STRING
    (100) atom_string_list -> . atom_string_list STRING

    NOT             shift and go to state 26
    LPAR            shift and go to state 1
    LSQB            shift and go to state 30
    LBRACE          shift and go to state 35
    NAME            shift and go to state 2
    NUMBER          shift and go to state 6
    STRING          shift and go to state 20

    comparison                     shift and go to state 33
    term                           shift and go to state 34
    arith_expr                     shift and go to state 37
    atom_string_list               shift and go to state 5
    and_test                       shift and go to state 28
    or_test                        shift and go to state 38
    power                          shift and go to state 15
    not_test                       shift and go to state 10
    atom                           shift and go to state 4
    test                           shift and go to state 215

state 214

    (148) varargslist_list -> varargslist_list COMMA fpdef EQUAL test .

    COMMA           reduce using rule 148 (varargslist_list -> varargslist_list COMMA fpdef EQUAL test .)
    RPAR            reduce using rule 148 (varargslist_list -> varargslist_list COMMA fpdef EQUAL test .)


state 215

    (128) dosm_colon_list -> dosm_colon_list COMMA test COLON test .

    COMMA           reduce using rule 128 (dosm_colon_list -> dosm_colon_list COMMA test COLON test .)
    RBRACE          reduce using rule 128 (dosm_colon_list -> dosm_colon_list COMMA test COLON test .)

