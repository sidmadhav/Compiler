
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5D2F32A9711928CB9522E7F75513E8A8'
    
_lr_action_items = {'DEDENT':([17,21,27,29,36,39,44,51,144,145,161,177,181,185,186,193,197,198,205,],[-9,-10,-43,-44,-41,-42,-11,-12,-48,-5,-45,-50,-46,-8,198,-49,-7,-6,-47,]),'LPAR':([0,1,2,4,5,6,8,11,12,14,16,17,20,21,25,26,27,29,30,32,35,36,39,40,44,45,46,47,48,49,50,51,54,58,60,61,63,66,69,72,75,79,80,83,84,85,86,87,89,90,91,92,94,95,97,99,102,106,107,109,111,116,118,120,122,123,125,129,130,132,133,136,138,139,141,142,144,145,148,149,154,160,161,165,167,169,174,175,177,178,181,182,185,187,190,193,194,196,198,200,202,204,205,206,209,211,213,],[1,1,-96,46,-98,-97,1,1,1,1,-2,-9,-99,-10,-3,1,-43,-44,1,1,1,-41,-42,-90,-11,1,1,46,1,-88,-100,-12,1,111,-4,1,1,1,1,1,-92,1,1,-94,-73,1,-69,-68,-71,-72,-70,-91,1,1,-113,1,-89,1,1,1,149,1,1,1,-93,1,1,-95,1,1,1,-114,1,-133,1,-115,-48,-5,1,149,1,1,-45,-134,1,1,149,1,-50,1,-46,1,1,149,149,-49,1,1,-6,149,1,149,-47,1,1,149,1,]),'RETURN':([0,14,16,17,21,25,27,29,36,39,44,45,51,60,95,106,125,144,145,154,161,169,177,178,181,185,193,194,198,205,],[12,12,-2,-9,-10,-3,-43,-44,-41,-42,-11,12,-12,-4,12,12,12,-48,-5,12,-45,12,-50,12,-46,12,-49,12,-6,-47,]),'LESS':([2,4,5,6,15,20,34,37,40,47,49,50,62,64,75,77,78,83,88,92,97,102,113,114,115,122,126,127,128,129,131,136,142,163,],[-96,-86,-98,-97,-80,-99,-74,87,-90,-87,-88,-100,-81,-82,-92,-75,-76,-94,87,-91,-113,-89,-84,-83,-85,-93,-77,-78,-79,-95,-66,-114,-115,-67,]),'EQUAL':([2,4,5,6,10,15,19,20,24,28,33,34,37,38,40,47,49,50,53,62,64,65,66,70,71,75,77,78,83,88,92,97,100,102,108,113,114,115,116,117,119,121,122,126,127,128,129,131,136,142,146,150,151,155,158,163,189,191,201,],[-96,-86,-98,-97,-58,-80,-35,-99,69,-54,-62,-74,-64,-53,-90,-87,-88,-100,-59,-81,-82,-37,-36,-63,-55,-92,-75,-76,-94,-65,-91,-113,138,-89,-60,-84,-83,-85,-38,-39,69,-56,-93,-77,-78,-79,-95,-66,-114,-115,-61,-149,175,-40,-57,-67,-150,202,209,]),'RPAR':([1,2,4,5,6,10,15,20,28,33,34,37,38,40,41,42,46,47,49,50,53,62,64,70,71,75,77,78,83,88,92,93,94,97,98,100,101,102,108,111,113,114,115,121,122,126,127,128,129,131,133,134,136,137,139,142,146,150,151,153,158,163,164,165,166,171,172,173,174,187,188,189,190,191,192,199,200,201,203,204,208,210,211,214,],[40,-96,-86,-98,-97,-58,-80,-99,-54,-62,-74,-64,-53,-90,92,-107,97,-87,-88,-100,-59,-81,-82,-63,-55,-92,-75,-76,-94,-65,-91,-109,-108,-113,136,-135,-129,-89,-60,152,-84,-83,-85,-56,-93,-77,-78,-79,-95,-66,-110,-111,-114,-131,-130,-115,-61,-149,-137,176,-57,-67,-112,-132,-136,-151,189,-139,-138,-152,-153,-150,-140,-145,-141,-155,-154,-147,-143,-142,-156,-146,-144,-148,]),'WHILE':([0,14,16,17,21,25,27,29,36,39,44,51,60,144,145,161,169,177,181,185,193,198,205,],[8,8,-2,-9,-10,-3,-43,-44,-41,-42,-11,-12,-4,-48,-5,-45,8,-50,-46,8,-49,-6,-47,]),'NOTEQUAL':([2,4,5,6,15,20,34,37,40,47,49,50,62,64,75,77,78,83,88,92,97,102,113,114,115,122,126,127,128,129,131,136,142,163,],[-96,-86,-98,-97,-80,-99,-74,84,-90,-87,-88,-100,-81,-82,-92,-75,-76,-94,84,-91,-113,-89,-84,-83,-85,-93,-77,-78,-79,-95,-66,-114,-115,-67,]),'GREATER':([2,4,5,6,15,20,34,37,40,47,49,50,62,64,75,77,78,83,88,92,97,102,113,114,115,122,126,127,128,129,131,136,142,163,],[-96,-86,-98,-97,-80,-99,-74,86,-90,-87,-88,-100,-81,-82,-92,-75,-76,-94,86,-91,-113,-89,-84,-83,-85,-93,-77,-78,-79,-95,-66,-114,-115,-67,]),'PRINT':([0,14,16,17,21,25,27,29,36,39,44,45,51,60,95,106,125,144,145,154,161,169,177,178,181,185,193,194,198,205,],[11,11,-2,-9,-10,-3,-43,-44,-41,-42,-11,11,-12,-4,11,11,11,-48,-5,11,-45,11,-50,11,-46,11,-49,11,-6,-47,]),'STAR':([2,4,5,6,15,20,40,47,49,50,62,64,75,83,92,97,102,113,114,115,122,129,136,142,],[-96,-86,-98,-97,61,-99,-90,-87,-88,-100,61,-82,-92,-94,-91,-113,-89,-84,-83,-85,-93,-95,-114,-115,]),'MINUS':([2,4,5,6,15,20,34,40,47,49,50,62,64,75,77,78,83,92,97,102,113,114,115,122,126,127,128,129,136,142,],[-96,-86,-98,-97,-80,-99,80,-90,-87,-88,-100,-81,-82,-92,80,-76,-94,-91,-113,-89,-84,-83,-85,-93,-77,-78,-79,-95,-114,-115,]),'DEF':([0,14,16,17,21,25,27,29,36,39,44,51,60,144,145,161,169,177,181,185,193,198,205,],[13,13,-2,-9,-10,-3,-43,-44,-41,-42,-11,-12,-4,-48,-5,-45,13,-50,-46,13,-49,-6,-47,]),'RBRACE':([2,4,5,6,10,15,20,28,33,34,35,37,38,40,47,49,50,53,62,64,70,71,75,77,78,81,83,88,92,97,102,108,113,114,115,121,122,126,127,128,129,131,136,142,146,158,162,163,182,183,196,212,215,],[-96,-86,-98,-97,-58,-80,-99,-54,-62,-74,83,-64,-53,-90,-87,-88,-100,-59,-81,-82,-63,-55,-92,-75,-76,129,-94,-65,-91,-113,-89,-60,-84,-83,-85,-56,-93,-77,-78,-79,-95,-66,-114,-115,-61,-57,-123,-67,-124,-125,-126,-127,-128,]),'GREATEREQUAL':([2,4,5,6,15,20,34,37,40,47,49,50,62,64,75,77,78,83,88,92,97,102,113,114,115,122,126,127,128,129,131,136,142,163,],[-96,-86,-98,-97,-80,-99,-74,89,-90,-87,-88,-100,-81,-82,-92,-75,-76,-94,89,-91,-113,-89,-84,-83,-85,-93,-77,-78,-79,-95,-66,-114,-115,-67,]),'SEMI':([2,3,4,5,6,9,10,11,12,15,19,20,23,24,28,31,33,34,37,38,40,43,47,49,50,53,55,56,57,62,64,65,66,68,70,71,75,77,78,83,88,92,96,97,102,108,109,110,113,114,115,116,117,119,121,122,126,127,128,129,131,135,136,142,146,147,148,155,157,158,163,170,],[-96,45,-86,-98,-97,-20,-58,-21,-29,-80,-35,-99,-19,-31,-54,-18,-62,-74,-64,-53,-90,95,-87,-88,-100,-59,-23,-22,-30,-81,-82,-37,-36,-32,-63,-55,-92,-75,-76,-94,-65,-91,-16,-113,-89,-60,-24,-25,-84,-83,-85,-38,-39,-33,-56,-93,-77,-78,-79,-95,-66,-17,-114,-115,-61,-27,-26,-40,-34,-57,-67,-28,]),'NEWLINE':([0,2,3,4,5,6,7,9,10,11,12,15,19,20,23,24,28,31,33,34,37,38,40,43,45,47,49,50,53,55,56,57,62,64,65,66,68,70,71,75,77,78,83,88,92,95,96,97,102,106,108,109,110,113,114,115,116,117,119,121,122,125,126,127,128,129,131,135,136,142,146,147,148,154,155,157,158,163,170,178,194,],[16,-96,44,-86,-98,-97,51,-20,-58,-21,-29,-80,-35,-99,-19,-31,-54,-18,-62,-74,-64,-53,-90,-14,-13,-87,-88,-100,-59,-23,-22,-30,-81,-82,-37,-36,-32,-63,-55,-92,-75,-76,-94,-65,-91,-15,-16,-113,-89,143,-60,-24,-25,-84,-83,-85,-38,-39,-33,-56,-93,143,-77,-78,-79,-95,-66,-17,-114,-115,-61,-27,-26,143,-40,-34,-57,-67,-28,143,143,]),'COLON':([2,4,5,6,10,15,19,20,28,33,34,37,38,40,47,49,50,52,53,62,64,65,66,70,71,75,76,77,78,82,83,88,92,97,102,108,112,113,114,115,116,117,121,122,126,127,128,129,131,136,142,146,152,155,156,158,163,176,180,195,207,],[-96,-86,-98,-97,-58,-80,-35,-99,-54,-62,-74,-64,-53,-90,-87,-88,-100,106,-59,-81,-82,-37,-36,-63,-55,-92,125,-75,-76,130,-94,-65,-91,-113,-89,-60,154,-84,-83,-85,-38,-39,-56,-93,-77,-78,-79,-95,-66,-114,-115,-61,-51,-40,178,-57,-67,-52,194,206,213,]),'PLUS':([2,4,5,6,15,20,34,40,47,49,50,62,64,75,77,78,83,92,97,102,113,114,115,122,126,127,128,129,136,142,],[-96,-86,-98,-97,-80,-99,79,-90,-87,-88,-100,-81,-82,-92,79,-76,-94,-91,-113,-89,-84,-83,-85,-93,-77,-78,-79,-95,-114,-115,]),'RSQB':([2,4,5,6,10,15,20,28,30,33,34,37,38,40,47,49,50,53,62,64,70,71,73,74,75,77,78,83,88,92,97,102,103,104,105,108,113,114,115,121,122,123,124,126,127,128,129,131,136,140,141,142,146,158,159,160,163,167,168,179,184,],[-96,-86,-98,-97,-58,-80,-99,-54,75,-62,-74,-64,-53,-90,-87,-88,-100,-59,-81,-82,-63,-55,122,-101,-92,-75,-76,-94,-65,-91,-113,-89,-122,-116,142,-60,-84,-83,-85,-56,-93,-102,-103,-77,-78,-79,-95,-66,-114,-118,-117,-115,-61,-57,-105,-104,-67,-119,-120,-106,-121,]),'EQEQUAL':([2,4,5,6,15,20,34,37,40,47,49,50,62,64,75,77,78,83,88,92,97,102,113,114,115,122,126,127,128,129,131,136,142,163,],[-96,-86,-98,-97,-80,-99,-74,91,-90,-87,-88,-100,-81,-82,-92,-75,-76,-94,91,-91,-113,-89,-84,-83,-85,-93,-77,-78,-79,-95,-66,-114,-115,-67,]),'$end':([18,59,],[0,-1,]),'STRING':([0,1,5,8,11,12,14,16,17,20,21,25,26,27,29,30,32,35,36,39,44,45,46,48,50,51,54,60,61,63,66,69,72,79,80,84,85,86,87,89,90,91,94,95,99,106,107,109,116,118,120,123,125,130,132,133,138,139,141,144,145,148,154,160,161,165,167,169,175,177,178,181,182,185,193,194,196,198,202,205,206,209,213,],[20,20,50,20,20,20,20,-2,-9,-99,-10,-3,20,-43,-44,20,20,20,-41,-42,-11,20,20,20,-100,-12,20,-4,20,20,20,20,20,20,20,-73,20,-69,-68,-71,-72,-70,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-133,20,-48,-5,20,20,20,-45,-134,20,20,20,-50,20,-46,20,20,-49,20,20,-6,20,-47,20,20,20,]),'FOR':([0,14,16,17,21,25,27,29,36,39,44,51,60,144,145,161,169,177,181,185,193,198,205,],[22,22,-2,-9,-10,-3,-43,-44,-41,-42,-11,-12,-4,-48,-5,-45,22,-50,-46,22,-49,-6,-47,]),'NUMBER':([0,1,8,11,12,14,16,17,21,25,26,27,29,30,32,35,36,39,44,45,46,48,51,54,60,61,63,66,69,72,79,80,84,85,86,87,89,90,91,94,95,99,106,107,109,116,118,120,123,125,130,132,133,138,139,141,144,145,148,154,160,161,165,167,169,175,177,178,181,182,185,193,194,196,198,202,205,206,209,213,],[6,6,6,6,6,6,-2,-9,-10,-3,6,-43,-44,6,6,6,-41,-42,-11,6,6,6,-12,6,-4,6,6,6,6,6,6,6,-73,6,-69,-68,-71,-72,-70,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-133,6,-48,-5,6,6,6,-45,-134,6,6,6,-50,6,-46,6,6,-49,6,6,-6,6,-47,6,6,6,]),'SLASH':([2,4,5,6,15,20,40,47,49,50,62,64,75,83,92,97,102,113,114,115,122,129,136,142,],[-96,-86,-98,-97,63,-99,-90,-87,-88,-100,63,-82,-92,-94,-91,-113,-89,-84,-83,-85,-93,-95,-114,-115,]),'IN':([67,],[118,]),'LESSEQUAL':([2,4,5,6,15,20,34,37,40,47,49,50,62,64,75,77,78,83,88,92,97,102,113,114,115,122,126,127,128,129,131,136,142,163,],[-96,-86,-98,-97,-80,-99,-74,90,-90,-87,-88,-100,-81,-82,-92,-75,-76,-94,90,-91,-113,-89,-84,-83,-85,-93,-77,-78,-79,-95,-66,-114,-115,-67,]),'LSQB':([0,1,2,4,5,6,8,11,12,14,16,17,20,21,25,26,27,29,30,32,35,36,39,40,44,45,46,47,48,49,50,51,54,60,61,63,66,69,72,75,79,80,83,84,85,86,87,89,90,91,92,94,95,97,99,102,106,107,109,116,118,120,122,123,125,129,130,132,133,136,138,139,141,142,144,145,148,154,160,161,165,167,169,175,177,178,181,182,185,193,194,196,198,202,205,206,209,213,],[30,30,-96,48,-98,-97,30,30,30,30,-2,-9,-99,-10,-3,30,-43,-44,30,30,30,-41,-42,-90,-11,30,30,48,30,-88,-100,-12,30,-4,30,30,30,30,30,-92,30,30,-94,-73,30,-69,-68,-71,-72,-70,-91,30,30,-113,30,-89,30,30,30,30,30,30,-93,30,30,-95,30,30,30,-114,30,-133,30,-115,-48,-5,30,30,30,-45,-134,30,30,30,-50,30,-46,30,30,-49,30,30,-6,30,-47,30,30,30,]),'ELSE':([44,51,145,161,198,],[-11,-12,-5,180,-6,]),'IF':([0,14,16,17,21,25,27,29,36,39,44,51,60,144,145,161,169,177,181,185,193,198,205,],[32,32,-2,-9,-10,-3,-43,-44,-41,-42,-11,-12,-4,-48,-5,-45,32,-50,-46,32,-49,-6,-47,]),'AND':([2,4,5,6,10,15,20,33,34,37,40,47,49,50,53,62,64,70,75,77,78,83,88,92,97,102,108,113,114,115,122,126,127,128,129,131,136,142,146,163,],[-96,-86,-98,-97,54,-80,-99,-62,-74,-64,-90,-87,-88,-100,107,-81,-82,-63,-92,-75,-76,-94,-65,-91,-113,-89,-60,-84,-83,-85,-93,-77,-78,-79,-95,-66,-114,-115,-61,-67,]),'LBRACE':([0,1,8,11,12,14,16,17,21,25,26,27,29,30,32,35,36,39,44,45,46,48,51,54,60,61,63,66,69,72,79,80,84,85,86,87,89,90,91,94,95,99,106,107,109,116,118,120,123,125,130,132,133,138,139,141,144,145,148,154,160,161,165,167,169,175,177,178,181,182,185,193,194,196,198,202,205,206,209,213,],[35,35,35,35,35,35,-2,-9,-10,-3,35,-43,-44,35,35,35,-41,-42,-11,35,35,35,-12,35,-4,35,35,35,35,35,35,35,-73,35,-69,-68,-71,-72,-70,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-133,35,-48,-5,35,35,35,-45,-134,35,35,35,-50,35,-46,35,35,-49,35,35,-6,35,-47,35,35,35,]),'INDENT':([143,],[169,]),'NAME':([0,1,8,11,12,13,14,16,17,21,22,25,26,27,29,30,32,35,36,39,44,45,46,48,51,54,60,61,63,66,69,72,79,80,84,85,86,87,89,90,91,94,95,99,106,107,109,111,116,118,120,123,125,130,132,133,138,139,141,144,145,148,149,154,160,161,165,167,169,174,175,177,178,181,182,185,187,190,193,194,196,198,200,202,204,205,206,209,211,213,],[2,2,2,2,2,58,2,-2,-9,-10,67,-3,2,-43,-44,2,2,2,-41,-42,-11,2,2,2,-12,2,-4,2,2,2,2,2,2,2,-73,2,-69,-68,-71,-72,-70,2,2,2,2,2,2,150,2,2,2,2,2,2,2,2,2,-133,2,-48,-5,2,150,2,2,-45,-134,2,2,150,2,-50,2,-46,2,2,150,150,-49,2,2,-6,150,2,150,-47,2,2,150,2,]),'NOT':([0,1,8,11,12,14,16,17,21,25,26,27,29,30,32,35,36,39,44,45,46,48,51,54,60,66,69,72,94,95,99,106,107,109,116,118,120,123,125,130,133,138,139,141,144,145,148,154,160,161,165,167,169,175,177,178,181,182,185,193,194,196,198,202,205,206,209,213,],[26,26,26,26,26,26,-2,-9,-10,-3,26,-43,-44,26,26,26,-41,-42,-11,26,26,26,-12,26,-4,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-133,26,-48,-5,26,26,26,-45,-134,26,26,26,-50,26,-46,26,26,-49,26,26,-6,26,-47,26,26,26,]),'COMMA':([2,4,5,6,10,15,19,20,28,33,34,37,38,40,42,47,49,50,53,56,62,64,65,70,71,74,75,77,78,83,88,92,93,97,100,101,102,103,104,108,110,113,114,115,117,121,122,124,126,127,128,129,131,134,136,137,140,142,146,147,150,151,155,158,159,162,163,164,166,168,170,171,173,179,183,184,188,189,191,192,199,201,203,208,210,212,214,215,],[-96,-86,-98,-97,-58,-80,66,-99,-54,-62,-74,-64,-53,-90,94,-87,-88,-100,-59,109,-81,-82,116,-63,-55,123,-92,-75,-76,-94,-65,-91,133,-113,-135,139,-89,-122,141,-60,148,-84,-83,-85,-39,-56,-93,160,-77,-78,-79,-95,-66,-111,-114,165,167,-115,-61,-27,-149,174,-40,-57,-105,182,-67,-112,-136,-120,-28,187,190,-106,196,-121,200,-150,-145,204,-155,-147,211,-156,-146,-127,-148,-128,]),'OR':([2,4,5,6,10,15,20,28,33,34,37,40,47,49,50,53,62,64,70,71,75,77,78,83,88,92,97,102,108,113,114,115,121,122,126,127,128,129,131,136,142,146,158,163,],[-96,-86,-98,-97,-58,-80,-99,72,-62,-74,-64,-90,-87,-88,-100,-59,-81,-82,-63,120,-92,-75,-76,-94,-65,-91,-113,-89,-60,-84,-83,-85,-56,-93,-77,-78,-79,-95,-66,-114,-115,-61,-57,-67,]),'ENDMARKER':([14,16,17,21,25,27,29,36,39,44,51,60,144,145,161,177,181,193,198,205,],[59,-2,-9,-10,-3,-43,-44,-41,-42,-11,-12,-4,-48,-5,-45,-50,-46,-49,-6,-47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arith_expr_list':([34,],[77,]),'small_stmt':([0,14,45,95,106,125,154,169,178,185,194,],[3,3,96,135,3,3,3,3,3,3,3,]),'varargslist_list':([151,192,],[173,203,]),'atom_string_list':([0,1,8,11,12,14,26,30,32,35,45,46,48,54,61,63,66,69,72,79,80,85,94,95,99,106,107,109,116,118,120,123,125,130,132,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'argument':([46,99,],[101,137,]),'small_stmt_list':([0,14,106,125,154,169,178,185,194,],[7,7,7,7,7,7,7,7,7,]),'dosm_colon_list':([162,],[183,]),'fplist':([149,],[172,]),'return_stmt':([0,14,45,95,106,125,154,169,178,185,194,],[9,9,9,9,9,9,9,9,9,9,9,]),'not_test':([0,1,8,11,12,14,26,30,32,35,45,46,48,54,66,69,72,94,95,99,106,107,109,116,118,120,123,125,130,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[10,10,10,10,10,10,70,10,10,10,10,10,10,108,10,10,10,10,10,10,10,146,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'testlist_comp':([1,],[41,]),'listmaker':([30,],[73,]),'print_list':([11,],[55,]),'arglist':([46,],[98,]),'else_stmt':([161,],[181,]),'file_input_star':([0,],[14,]),'comp_op':([37,88,],[85,132,]),'parameters':([58,],[112,]),'testlist_list':([19,],[65,]),'testlist_comp_list':([42,],[93,]),'small_stmt_list_list':([3,],[43,]),'simple_stmt':([0,14,106,125,154,169,178,185,194,],[17,17,145,145,145,17,145,17,145,]),'program':([0,],[18,]),'dictorsetmaker':([35,],[81,]),'test':([0,1,8,11,12,14,30,32,35,45,46,48,66,69,94,95,99,106,109,116,118,123,125,130,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[19,42,52,56,19,19,74,76,82,19,100,103,117,19,134,19,100,19,147,155,19,159,19,162,164,166,103,170,19,179,103,19,192,19,195,19,19,207,210,212,214,215,]),'suite':([106,125,154,178,194,],[144,161,177,193,205,]),'subscript':([48,141,167,],[104,168,184,]),'compound_stmt':([0,14,169,185,],[21,21,21,21,]),'equal_list':([24,119,],[68,157,]),'or_test_list':([28,],[71,]),'power':([0,1,8,11,12,14,26,30,32,35,45,46,48,54,61,63,66,69,72,79,80,85,94,95,99,106,107,109,116,118,120,123,125,130,132,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,113,115,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'print_stmt':([0,14,45,95,106,125,154,169,178,185,194,],[23,23,23,23,23,23,23,23,23,23,23,]),'subscriptlist_list':([104,],[140,]),'subscriptlist':([48,],[105,]),'testlist':([0,12,14,45,69,95,106,118,125,154,169,178,185,194,],[24,57,24,24,119,24,24,156,24,24,24,24,24,24,]),'comparison_list':([37,],[88,]),'stmt':([0,14,169,185,],[25,60,185,185,]),'term_op':([15,62,],[64,114,]),'for_stmt':([0,14,169,185,],[27,27,27,27,]),'and_test':([0,1,8,11,12,14,30,32,35,45,46,48,66,69,72,94,95,99,106,109,116,118,120,123,125,130,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,121,28,28,28,28,28,28,28,158,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'atom':([0,1,8,11,12,14,26,30,32,35,45,46,48,54,61,63,66,69,72,79,80,85,94,95,99,106,107,109,116,118,120,123,125,130,132,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'funcdef':([0,14,169,185,],[29,29,29,29,]),'expr_stmt':([0,14,45,95,106,125,154,169,178,185,194,],[31,31,31,31,31,31,31,31,31,31,31,]),'term_list':([15,],[62,]),'arith_op':([34,77,],[78,126,]),'comparison':([0,1,8,11,12,14,26,30,32,35,45,46,48,54,66,69,72,94,95,99,106,107,109,116,118,120,123,125,130,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'term':([0,1,8,11,12,14,26,30,32,35,45,46,48,54,66,69,72,79,80,85,94,95,99,106,107,109,116,118,120,123,125,130,132,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,127,128,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'if_stmt':([0,14,169,185,],[36,36,36,36,]),'arith_expr':([0,1,8,11,12,14,26,30,32,35,45,46,48,54,66,69,72,85,94,95,99,106,107,109,116,118,120,123,125,130,132,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,131,37,37,37,37,37,37,37,37,37,37,37,37,163,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'fplist_list':([171,],[188,]),'or_test':([0,1,8,11,12,14,30,32,35,45,46,48,66,69,94,95,99,106,109,116,118,123,125,130,133,138,141,148,154,160,167,169,175,178,182,185,194,196,202,206,209,213,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'power_list':([4,],[47,]),'while_stmt':([0,14,169,185,],[39,39,39,39,]),'varargslist':([111,],[153,]),'stmt_list':([169,185,],[186,197,]),'arglist_list':([46,],[99,]),'and_test_list':([10,],[53,]),'print_list_list':([56,],[110,]),'listmaker_list':([74,],[124,]),'trailer':([4,47,],[49,102,]),'fpdef':([111,149,174,187,190,200,204,211,],[151,171,191,199,201,208,191,201,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> file_input_star ENDMARKER','program',2,'p_program','smallpy_parser.py',46),
  ('file_input_star -> NEWLINE','file_input_star',1,'p_file_input_star_1','smallpy_parser.py',50),
  ('file_input_star -> stmt','file_input_star',1,'p_file_input_star_2','smallpy_parser.py',54),
  ('file_input_star -> file_input_star stmt','file_input_star',2,'p_file_input_star_3','smallpy_parser.py',58),
  ('suite -> simple_stmt','suite',1,'p_suite1','smallpy_parser.py',62),
  ('suite -> NEWLINE INDENT stmt_list DEDENT','suite',4,'p_suite2','smallpy_parser.py',71),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list1','smallpy_parser.py',75),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list2','smallpy_parser.py',84),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','smallpy_parser.py',93),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','smallpy_parser.py',94),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt1','smallpy_parser.py',98),
  ('simple_stmt -> small_stmt_list NEWLINE','simple_stmt',2,'p_simple_stmt2','smallpy_parser.py',102),
  ('small_stmt_list -> small_stmt SEMI','small_stmt_list',2,'p_small_stmt_list1','smallpy_parser.py',106),
  ('small_stmt_list -> small_stmt small_stmt_list_list','small_stmt_list',2,'p_small_stmt_list2','smallpy_parser.py',110),
  ('small_stmt_list -> small_stmt small_stmt_list_list SEMI','small_stmt_list',3,'p_small_stmt_list3','smallpy_parser.py',114),
  ('small_stmt_list_list -> SEMI small_stmt','small_stmt_list_list',2,'p_small_stmt_list_list1','smallpy_parser.py',118),
  ('small_stmt_list_list -> small_stmt_list_list SEMI small_stmt','small_stmt_list_list',3,'p_small_stmt_list_list2','smallpy_parser.py',122),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt1','smallpy_parser.py',126),
  ('small_stmt -> print_stmt','small_stmt',1,'p_small_stmt1','smallpy_parser.py',127),
  ('small_stmt -> return_stmt','small_stmt',1,'p_small_stmt1','smallpy_parser.py',128),
  ('print_stmt -> PRINT','print_stmt',1,'p_print_stmt1','smallpy_parser.py',132),
  ('print_stmt -> PRINT test','print_stmt',2,'p_print_stmt2','smallpy_parser.py',136),
  ('print_stmt -> PRINT print_list','print_stmt',2,'p_print_stmt3','smallpy_parser.py',140),
  ('print_list -> test COMMA','print_list',2,'p_print_list1','smallpy_parser.py',144),
  ('print_list -> test print_list_list','print_list',2,'p_print_list2','smallpy_parser.py',148),
  ('print_list -> test print_list_list COMMA','print_list',3,'p_print_list3','smallpy_parser.py',152),
  ('print_list_list -> COMMA test','print_list_list',2,'p_print_list_list1','smallpy_parser.py',156),
  ('print_list_list -> print_list_list COMMA test','print_list_list',3,'p_print_list_list2','smallpy_parser.py',160),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt1','smallpy_parser.py',164),
  ('return_stmt -> RETURN testlist','return_stmt',2,'p_return_stmt2','smallpy_parser.py',168),
  ('expr_stmt -> testlist','expr_stmt',1,'p_expr_stmt1','smallpy_parser.py',173),
  ('expr_stmt -> testlist equal_list','expr_stmt',2,'p_expr_stmt3','smallpy_parser.py',177),
  ('equal_list -> EQUAL testlist','equal_list',2,'p_equal_list1','smallpy_parser.py',187),
  ('equal_list -> EQUAL testlist equal_list','equal_list',3,'p_equal_list2','smallpy_parser.py',191),
  ('testlist -> test','testlist',1,'p_testlist1','smallpy_parser.py',195),
  ('testlist -> test COMMA','testlist',2,'p_testlist2','smallpy_parser.py',199),
  ('testlist -> test testlist_list','testlist',2,'p_testlist3','smallpy_parser.py',203),
  ('testlist -> test testlist_list COMMA','testlist',3,'p_testlist4','smallpy_parser.py',207),
  ('testlist_list -> COMMA test','testlist_list',2,'p_testlist_list1','smallpy_parser.py',211),
  ('testlist_list -> testlist_list COMMA test','testlist_list',3,'p_testlist_list2','smallpy_parser.py',215),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','smallpy_parser.py',219),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','smallpy_parser.py',220),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','smallpy_parser.py',221),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','smallpy_parser.py',222),
  ('if_stmt -> IF test COLON suite','if_stmt',4,'p_if_stmt1','smallpy_parser.py',226),
  ('if_stmt -> IF test COLON suite else_stmt','if_stmt',5,'p_if_stmt3','smallpy_parser.py',230),
  ('else_stmt -> ELSE COLON suite','else_stmt',3,'p_else_stmt','smallpy_parser.py',234),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt1','smallpy_parser.py',238),
  ('for_stmt -> FOR NAME IN testlist COLON suite','for_stmt',6,'p_for_stmt1','smallpy_parser.py',242),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','smallpy_parser.py',250),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters1','smallpy_parser.py',265),
  ('parameters -> LPAR varargslist RPAR','parameters',3,'p_parameters2','smallpy_parser.py',269),
  ('test -> or_test','test',1,'p_test1','smallpy_parser.py',273),
  ('or_test -> and_test','or_test',1,'p_or_test1','smallpy_parser.py',277),
  ('or_test -> and_test or_test_list','or_test',2,'p_or_test2','smallpy_parser.py',281),
  ('or_test_list -> OR and_test','or_test_list',2,'p_or_test_list1','smallpy_parser.py',285),
  ('or_test_list -> or_test_list OR and_test','or_test_list',3,'p_or_test_list2','smallpy_parser.py',289),
  ('and_test -> not_test','and_test',1,'p_and_test1','smallpy_parser.py',293),
  ('and_test -> not_test and_test_list','and_test',2,'p_and_test2','smallpy_parser.py',297),
  ('and_test_list -> AND not_test','and_test_list',2,'p_and_test_list1','smallpy_parser.py',301),
  ('and_test_list -> and_test_list AND not_test','and_test_list',3,'p_and_test_list2','smallpy_parser.py',305),
  ('not_test -> comparison','not_test',1,'p_not_test','smallpy_parser.py',309),
  ('not_test -> NOT not_test','not_test',2,'p_not_test2','smallpy_parser.py',313),
  ('comparison -> arith_expr','comparison',1,'p_comparison1','smallpy_parser.py',317),
  ('comparison -> arith_expr comparison_list','comparison',2,'p_comparison2','smallpy_parser.py',321),
  ('comparison_list -> comp_op arith_expr','comparison_list',2,'p_comparison_list1','smallpy_parser.py',328),
  ('comparison_list -> comparison_list comp_op arith_expr','comparison_list',3,'p_comparison_list2','smallpy_parser.py',332),
  ('comp_op -> LESS','comp_op',1,'p_comp_op1','smallpy_parser.py',336),
  ('comp_op -> GREATER','comp_op',1,'p_comp_op1','smallpy_parser.py',337),
  ('comp_op -> EQEQUAL','comp_op',1,'p_comp_op1','smallpy_parser.py',338),
  ('comp_op -> GREATEREQUAL','comp_op',1,'p_comp_op1','smallpy_parser.py',339),
  ('comp_op -> LESSEQUAL','comp_op',1,'p_comp_op1','smallpy_parser.py',340),
  ('comp_op -> NOTEQUAL','comp_op',1,'p_comp_op1','smallpy_parser.py',341),
  ('arith_expr -> term','arith_expr',1,'p_arith_expr1','smallpy_parser.py',345),
  ('arith_expr -> term arith_expr_list','arith_expr',2,'p_arith_expr2','smallpy_parser.py',349),
  ('arith_expr_list -> arith_op','arith_expr_list',1,'p_arith_expr_list1','smallpy_parser.py',359),
  ('arith_expr_list -> arith_expr_list arith_op','arith_expr_list',2,'p_arith_expr_list2','smallpy_parser.py',363),
  ('arith_op -> PLUS term','arith_op',2,'p_arith_op1','smallpy_parser.py',367),
  ('arith_op -> MINUS term','arith_op',2,'p_arith_op2','smallpy_parser.py',371),
  ('term -> power','term',1,'p_term1','smallpy_parser.py',375),
  ('term -> power term_list','term',2,'p_term2','smallpy_parser.py',379),
  ('term_list -> term_op','term_list',1,'p_term_list1','smallpy_parser.py',389),
  ('term_list -> term_list term_op','term_list',2,'p_term_list2','smallpy_parser.py',393),
  ('term_op -> STAR power','term_op',2,'p_term_op1','smallpy_parser.py',397),
  ('term_op -> SLASH power','term_op',2,'p_term_op2','smallpy_parser.py',401),
  ('power -> atom','power',1,'p_power1','smallpy_parser.py',405),
  ('power -> atom power_list','power',2,'p_power3','smallpy_parser.py',409),
  ('power_list -> trailer','power_list',1,'p_power_list1','smallpy_parser.py',423),
  ('power_list -> power_list trailer','power_list',2,'p_power_list2','smallpy_parser.py',427),
  ('atom -> LPAR RPAR','atom',2,'p_atom1','smallpy_parser.py',431),
  ('atom -> LPAR testlist_comp RPAR','atom',3,'p_atom3','smallpy_parser.py',435),
  ('atom -> LSQB RSQB','atom',2,'p_atom4','smallpy_parser.py',444),
  ('atom -> LSQB listmaker RSQB','atom',3,'p_atom5','smallpy_parser.py',448),
  ('atom -> LBRACE RBRACE','atom',2,'p_atom6','smallpy_parser.py',457),
  ('atom -> LBRACE dictorsetmaker RBRACE','atom',3,'p_atom7','smallpy_parser.py',461),
  ('atom -> NAME','atom',1,'p_atom8','smallpy_parser.py',471),
  ('atom -> NUMBER','atom',1,'p_atom9','smallpy_parser.py',475),
  ('atom -> atom_string_list','atom',1,'p_atom10','smallpy_parser.py',479),
  ('atom_string_list -> STRING','atom_string_list',1,'p_atom_string_list1','smallpy_parser.py',483),
  ('atom_string_list -> atom_string_list STRING','atom_string_list',2,'p_atom_string_list2','smallpy_parser.py',487),
  ('listmaker -> test','listmaker',1,'p_listmaker2','smallpy_parser.py',491),
  ('listmaker -> test COMMA','listmaker',2,'p_listmaker3','smallpy_parser.py',495),
  ('listmaker -> test listmaker_list','listmaker',2,'p_listmaker4','smallpy_parser.py',499),
  ('listmaker -> test listmaker_list COMMA','listmaker',3,'p_listmaker5','smallpy_parser.py',504),
  ('listmaker_list -> COMMA test','listmaker_list',2,'p_listmaker_list1','smallpy_parser.py',509),
  ('listmaker_list -> listmaker_list COMMA test','listmaker_list',3,'p_listmaker_list2','smallpy_parser.py',513),
  ('testlist_comp -> test','testlist_comp',1,'p_testlist_comp2','smallpy_parser.py',517),
  ('testlist_comp -> test COMMA','testlist_comp',2,'p_testlist_comp3','smallpy_parser.py',521),
  ('testlist_comp -> test testlist_comp_list','testlist_comp',2,'p_testlist_comp4','smallpy_parser.py',525),
  ('testlist_comp -> test testlist_comp_list COMMA','testlist_comp',3,'p_testlist_comp5','smallpy_parser.py',530),
  ('testlist_comp_list -> COMMA test','testlist_comp_list',2,'p_testlist_comp_list1','smallpy_parser.py',535),
  ('testlist_comp_list -> testlist_comp_list COMMA test','testlist_comp_list',3,'p_testlist_comp_list2','smallpy_parser.py',539),
  ('trailer -> LPAR RPAR','trailer',2,'p_trailer1','smallpy_parser.py',543),
  ('trailer -> LPAR arglist RPAR','trailer',3,'p_trailer2','smallpy_parser.py',547),
  ('trailer -> LSQB subscriptlist RSQB','trailer',3,'p_trailer3','smallpy_parser.py',551),
  ('subscriptlist -> subscript','subscriptlist',1,'p_subscriptlist1','smallpy_parser.py',555),
  ('subscriptlist -> subscript COMMA','subscriptlist',2,'p_subscriptlist2','smallpy_parser.py',559),
  ('subscriptlist -> subscript subscriptlist_list','subscriptlist',2,'p_subscriptlist3','smallpy_parser.py',563),
  ('subscriptlist -> subscript subscriptlist_list COMMA','subscriptlist',3,'p_subscriptlist4','smallpy_parser.py',567),
  ('subscriptlist_list -> COMMA subscript','subscriptlist_list',2,'p_subscriptlist_list1','smallpy_parser.py',571),
  ('subscriptlist_list -> subscriptlist_list COMMA subscript','subscriptlist_list',3,'p_subscript_list2','smallpy_parser.py',575),
  ('subscript -> test','subscript',1,'p_subcript2','smallpy_parser.py',579),
  ('dictorsetmaker -> test COLON test','dictorsetmaker',3,'p_dictorsetmaker2','smallpy_parser.py',583),
  ('dictorsetmaker -> test COLON test COMMA','dictorsetmaker',4,'p_dictorsetmaker3','smallpy_parser.py',588),
  ('dictorsetmaker -> test COLON test dosm_colon_list','dictorsetmaker',4,'p_dictorsetmaker4','smallpy_parser.py',593),
  ('dictorsetmaker -> test COLON test dosm_colon_list COMMA','dictorsetmaker',5,'p_dictorsetmaker5','smallpy_parser.py',598),
  ('dosm_colon_list -> COMMA test COLON test','dosm_colon_list',4,'p_dosm_colon_list1','smallpy_parser.py',603),
  ('dosm_colon_list -> dosm_colon_list COMMA test COLON test','dosm_colon_list',5,'p_dosm_colon_list2','smallpy_parser.py',607),
  ('arglist -> argument','arglist',1,'p_arglist1','smallpy_parser.py',611),
  ('arglist -> argument COMMA','arglist',2,'p_arglist2','smallpy_parser.py',618),
  ('arglist -> arglist_list argument','arglist',2,'p_arglist6','smallpy_parser.py',625),
  ('arglist -> arglist_list argument COMMA','arglist',3,'p_arglist7','smallpy_parser.py',636),
  ('arglist_list -> argument COMMA','arglist_list',2,'p_arglist_list1','smallpy_parser.py',647),
  ('arglist_list -> arglist_list argument COMMA','arglist_list',3,'p_arglist_list2','smallpy_parser.py',651),
  ('argument -> test','argument',1,'p_argument1','smallpy_parser.py',655),
  ('argument -> test EQUAL test','argument',3,'p_argument3','smallpy_parser.py',659),
  ('varargslist -> fpdef','varargslist',1,'p_varargslist4','smallpy_parser.py',663),
  ('varargslist -> fpdef COMMA','varargslist',2,'p_varargslist5','smallpy_parser.py',667),
  ('varargslist -> fpdef varargslist_list','varargslist',2,'p_varargslist9','smallpy_parser.py',671),
  ('varargslist -> fpdef varargslist_list COMMA','varargslist',3,'p_varargslist10','smallpy_parser.py',677),
  ('varargslist -> fpdef EQUAL test','varargslist',3,'p_varargslist14','smallpy_parser.py',683),
  ('varargslist -> fpdef EQUAL test COMMA','varargslist',4,'p_varargslist15','smallpy_parser.py',687),
  ('varargslist -> fpdef EQUAL test varargslist_list','varargslist',4,'p_varargslist19','smallpy_parser.py',691),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA','varargslist',5,'p_varargslist20','smallpy_parser.py',698),
  ('varargslist_list -> COMMA fpdef','varargslist_list',2,'p_varargslist_list1','smallpy_parser.py',705),
  ('varargslist_list -> COMMA fpdef EQUAL test','varargslist_list',4,'p_varargslist_list2','smallpy_parser.py',709),
  ('varargslist_list -> varargslist_list COMMA fpdef','varargslist_list',3,'p_varargslist_list3','smallpy_parser.py',713),
  ('varargslist_list -> varargslist_list COMMA fpdef EQUAL test','varargslist_list',5,'p_varargslist_list4','smallpy_parser.py',719),
  ('fpdef -> NAME','fpdef',1,'p_fpdef1','smallpy_parser.py',726),
  ('fpdef -> LPAR fplist RPAR','fpdef',3,'p_fpdef2','smallpy_parser.py',730),
  ('fplist -> fpdef','fplist',1,'p_fplist1','smallpy_parser.py',734),
  ('fplist -> fpdef COMMA','fplist',2,'p_fplist2','smallpy_parser.py',738),
  ('fplist -> fpdef fplist_list','fplist',2,'p_fplist3','smallpy_parser.py',742),
  ('fplist -> fpdef fplist_list COMMA','fplist',3,'p_fplist4','smallpy_parser.py',746),
  ('fplist_list -> COMMA fpdef','fplist_list',2,'p_fplist_list1','smallpy_parser.py',750),
  ('fplist_list -> fplist_list COMMA fpdef','fplist_list',3,'p_fplist_list2','smallpy_parser.py',754),
]
